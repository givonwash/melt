// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema CronWorkflow
 */
export class CronWorkflow extends ApiObject {
  /**
   * Returns the apiVersion and kind for "CronWorkflow"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'argoproj.io/v1alpha1',
    kind: 'CronWorkflow',
  }

  /**
   * Renders a Kubernetes manifest for "CronWorkflow".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: CronWorkflowProps): any {
    return {
      ...CronWorkflow.GVK,
      ...toJson_CronWorkflowProps(props),
    };
  }

  /**
   * Defines a "CronWorkflow" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: CronWorkflowProps) {
    super(scope, id, {
      ...CronWorkflow.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...CronWorkflow.GVK,
      ...toJson_CronWorkflowProps(resolved),
    };
  }
}

/**
 * @schema CronWorkflow
 */
export interface CronWorkflowProps {
  /**
   * @schema CronWorkflow#metadata
   */
  readonly metadata: ApiObjectMetadata;

  /**
   * @schema CronWorkflow#spec
   */
  readonly spec: CronWorkflowSpec;

}

/**
 * Converts an object of type 'CronWorkflowProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowProps(obj: CronWorkflowProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_CronWorkflowSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpec
 */
export interface CronWorkflowSpec {
  /**
   * @schema CronWorkflowSpec#concurrencyPolicy
   */
  readonly concurrencyPolicy?: string;

  /**
   * @schema CronWorkflowSpec#failedJobsHistoryLimit
   */
  readonly failedJobsHistoryLimit?: number;

  /**
   * @schema CronWorkflowSpec#schedule
   */
  readonly schedule: string;

  /**
   * @schema CronWorkflowSpec#startingDeadlineSeconds
   */
  readonly startingDeadlineSeconds?: number;

  /**
   * @schema CronWorkflowSpec#successfulJobsHistoryLimit
   */
  readonly successfulJobsHistoryLimit?: number;

  /**
   * @schema CronWorkflowSpec#suspend
   */
  readonly suspend?: boolean;

  /**
   * @schema CronWorkflowSpec#timezone
   */
  readonly timezone?: string;

  /**
   * @schema CronWorkflowSpec#workflowMetadata
   */
  readonly workflowMetadata?: any;

  /**
   * @schema CronWorkflowSpec#workflowSpec
   */
  readonly workflowSpec: CronWorkflowSpecWorkflowSpec;

}

/**
 * Converts an object of type 'CronWorkflowSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpec(obj: CronWorkflowSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'concurrencyPolicy': obj.concurrencyPolicy,
    'failedJobsHistoryLimit': obj.failedJobsHistoryLimit,
    'schedule': obj.schedule,
    'startingDeadlineSeconds': obj.startingDeadlineSeconds,
    'successfulJobsHistoryLimit': obj.successfulJobsHistoryLimit,
    'suspend': obj.suspend,
    'timezone': obj.timezone,
    'workflowMetadata': obj.workflowMetadata,
    'workflowSpec': toJson_CronWorkflowSpecWorkflowSpec(obj.workflowSpec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpec
 */
export interface CronWorkflowSpecWorkflowSpec {
  /**
   * @schema CronWorkflowSpecWorkflowSpec#activeDeadlineSeconds
   */
  readonly activeDeadlineSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#affinity
   */
  readonly affinity?: CronWorkflowSpecWorkflowSpecAffinity;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#arguments
   */
  readonly arguments?: CronWorkflowSpecWorkflowSpecArguments;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#artifactGC
   */
  readonly artifactGc?: CronWorkflowSpecWorkflowSpecArtifactGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#artifactRepositoryRef
   */
  readonly artifactRepositoryRef?: CronWorkflowSpecWorkflowSpecArtifactRepositoryRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#automountServiceAccountToken
   */
  readonly automountServiceAccountToken?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#dnsConfig
   */
  readonly dnsConfig?: CronWorkflowSpecWorkflowSpecDnsConfig;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#dnsPolicy
   */
  readonly dnsPolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#entrypoint
   */
  readonly entrypoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#executor
   */
  readonly executor?: CronWorkflowSpecWorkflowSpecExecutor;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#hooks
   */
  readonly hooks?: { [key: string]: CronWorkflowSpecWorkflowSpecHooks };

  /**
   * @schema CronWorkflowSpecWorkflowSpec#hostAliases
   */
  readonly hostAliases?: CronWorkflowSpecWorkflowSpecHostAliases[];

  /**
   * @schema CronWorkflowSpecWorkflowSpec#hostNetwork
   */
  readonly hostNetwork?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#imagePullSecrets
   */
  readonly imagePullSecrets?: CronWorkflowSpecWorkflowSpecImagePullSecrets[];

  /**
   * @schema CronWorkflowSpecWorkflowSpec#metrics
   */
  readonly metrics?: CronWorkflowSpecWorkflowSpecMetrics;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpec#onExit
   */
  readonly onExit?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#parallelism
   */
  readonly parallelism?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#podDisruptionBudget
   */
  readonly podDisruptionBudget?: CronWorkflowSpecWorkflowSpecPodDisruptionBudget;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#podGC
   */
  readonly podGc?: CronWorkflowSpecWorkflowSpecPodGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#podPriority
   */
  readonly podPriority?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#podPriorityClassName
   */
  readonly podPriorityClassName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#podSpecPatch
   */
  readonly podSpecPatch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#priority
   */
  readonly priority?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#retryStrategy
   */
  readonly retryStrategy?: CronWorkflowSpecWorkflowSpecRetryStrategy;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#schedulerName
   */
  readonly schedulerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecSecurityContext;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#shutdown
   */
  readonly shutdown?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#suspend
   */
  readonly suspend?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#synchronization
   */
  readonly synchronization?: CronWorkflowSpecWorkflowSpecSynchronization;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#templateDefaults
   */
  readonly templateDefaults?: CronWorkflowSpecWorkflowSpecTemplateDefaults;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#templates
   */
  readonly templates?: CronWorkflowSpecWorkflowSpecTemplates[];

  /**
   * @schema CronWorkflowSpecWorkflowSpec#tolerations
   */
  readonly tolerations?: CronWorkflowSpecWorkflowSpecTolerations[];

  /**
   * @schema CronWorkflowSpecWorkflowSpec#ttlStrategy
   */
  readonly ttlStrategy?: CronWorkflowSpecWorkflowSpecTtlStrategy;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#volumeClaimGC
   */
  readonly volumeClaimGc?: CronWorkflowSpecWorkflowSpecVolumeClaimGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#volumeClaimTemplates
   */
  readonly volumeClaimTemplates?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplates[];

  /**
   * @schema CronWorkflowSpecWorkflowSpec#volumes
   */
  readonly volumes?: CronWorkflowSpecWorkflowSpecVolumes[];

  /**
   * @schema CronWorkflowSpecWorkflowSpec#workflowMetadata
   */
  readonly workflowMetadata?: CronWorkflowSpecWorkflowSpecWorkflowMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#workflowTemplateRef
   */
  readonly workflowTemplateRef?: CronWorkflowSpecWorkflowSpecWorkflowTemplateRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpec(obj: CronWorkflowSpecWorkflowSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'activeDeadlineSeconds': obj.activeDeadlineSeconds,
    'affinity': toJson_CronWorkflowSpecWorkflowSpecAffinity(obj.affinity),
    'archiveLogs': obj.archiveLogs,
    'arguments': toJson_CronWorkflowSpecWorkflowSpecArguments(obj.arguments),
    'artifactGC': toJson_CronWorkflowSpecWorkflowSpecArtifactGc(obj.artifactGc),
    'artifactRepositoryRef': toJson_CronWorkflowSpecWorkflowSpecArtifactRepositoryRef(obj.artifactRepositoryRef),
    'automountServiceAccountToken': obj.automountServiceAccountToken,
    'dnsConfig': toJson_CronWorkflowSpecWorkflowSpecDnsConfig(obj.dnsConfig),
    'dnsPolicy': obj.dnsPolicy,
    'entrypoint': obj.entrypoint,
    'executor': toJson_CronWorkflowSpecWorkflowSpecExecutor(obj.executor),
    'hooks': ((obj.hooks) === undefined) ? undefined : (Object.entries(obj.hooks).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: toJson_CronWorkflowSpecWorkflowSpecHooks(i[1]) }), {})),
    'hostAliases': obj.hostAliases?.map(y => toJson_CronWorkflowSpecWorkflowSpecHostAliases(y)),
    'hostNetwork': obj.hostNetwork,
    'imagePullSecrets': obj.imagePullSecrets?.map(y => toJson_CronWorkflowSpecWorkflowSpecImagePullSecrets(y)),
    'metrics': toJson_CronWorkflowSpecWorkflowSpecMetrics(obj.metrics),
    'nodeSelector': ((obj.nodeSelector) === undefined) ? undefined : (Object.entries(obj.nodeSelector).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'onExit': obj.onExit,
    'parallelism': obj.parallelism,
    'podDisruptionBudget': toJson_CronWorkflowSpecWorkflowSpecPodDisruptionBudget(obj.podDisruptionBudget),
    'podGC': toJson_CronWorkflowSpecWorkflowSpecPodGc(obj.podGc),
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecPodMetadata(obj.podMetadata),
    'podPriority': obj.podPriority,
    'podPriorityClassName': obj.podPriorityClassName,
    'podSpecPatch': obj.podSpecPatch,
    'priority': obj.priority,
    'retryStrategy': toJson_CronWorkflowSpecWorkflowSpecRetryStrategy(obj.retryStrategy),
    'schedulerName': obj.schedulerName,
    'securityContext': toJson_CronWorkflowSpecWorkflowSpecSecurityContext(obj.securityContext),
    'serviceAccountName': obj.serviceAccountName,
    'shutdown': obj.shutdown,
    'suspend': obj.suspend,
    'synchronization': toJson_CronWorkflowSpecWorkflowSpecSynchronization(obj.synchronization),
    'templateDefaults': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaults(obj.templateDefaults),
    'templates': obj.templates?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplates(y)),
    'tolerations': obj.tolerations?.map(y => toJson_CronWorkflowSpecWorkflowSpecTolerations(y)),
    'ttlStrategy': toJson_CronWorkflowSpecWorkflowSpecTtlStrategy(obj.ttlStrategy),
    'volumeClaimGC': toJson_CronWorkflowSpecWorkflowSpecVolumeClaimGc(obj.volumeClaimGc),
    'volumeClaimTemplates': obj.volumeClaimTemplates?.map(y => toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplates(y)),
    'volumes': obj.volumes?.map(y => toJson_CronWorkflowSpecWorkflowSpecVolumes(y)),
    'workflowMetadata': toJson_CronWorkflowSpecWorkflowSpecWorkflowMetadata(obj.workflowMetadata),
    'workflowTemplateRef': toJson_CronWorkflowSpecWorkflowSpecWorkflowTemplateRef(obj.workflowTemplateRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinity
 */
export interface CronWorkflowSpecWorkflowSpecAffinity {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinity#nodeAffinity
   */
  readonly nodeAffinity?: CronWorkflowSpecWorkflowSpecAffinityNodeAffinity;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinity#podAffinity
   */
  readonly podAffinity?: CronWorkflowSpecWorkflowSpecAffinityPodAffinity;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinity(obj: CronWorkflowSpecWorkflowSpecAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeAffinity': toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinity(obj.nodeAffinity),
    'podAffinity': toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinity(obj.podAffinity),
    'podAntiAffinity': toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity(obj.podAntiAffinity),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArguments
 */
export interface CronWorkflowSpecWorkflowSpecArguments {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArguments#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecArgumentsArtifacts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecArguments#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecArgumentsParameters[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArguments' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArguments(obj: CronWorkflowSpecWorkflowSpecArguments | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifacts': obj.artifacts?.map(y => toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifacts(y)),
    'parameters': obj.parameters?.map(y => toJson_CronWorkflowSpecWorkflowSpecArgumentsParameters(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArtifactGc
 */
export interface CronWorkflowSpecWorkflowSpecArtifactGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArtifactGc#forceFinalizerRemoval
   */
  readonly forceFinalizerRemoval?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArtifactGc#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecArtifactGcPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArtifactGc#podSpecPatch
   */
  readonly podSpecPatch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArtifactGc#strategy
   */
  readonly strategy?: CronWorkflowSpecWorkflowSpecArtifactGcStrategy;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArtifactGc(obj: CronWorkflowSpecWorkflowSpecArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'forceFinalizerRemoval': obj.forceFinalizerRemoval,
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecArtifactGcPodMetadata(obj.podMetadata),
    'podSpecPatch': obj.podSpecPatch,
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArtifactRepositoryRef
 */
export interface CronWorkflowSpecWorkflowSpecArtifactRepositoryRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArtifactRepositoryRef#configMap
   */
  readonly configMap?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArtifactRepositoryRef#key
   */
  readonly key?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArtifactRepositoryRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArtifactRepositoryRef(obj: CronWorkflowSpecWorkflowSpecArtifactRepositoryRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMap': obj.configMap,
    'key': obj.key,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecDnsConfig
 */
export interface CronWorkflowSpecWorkflowSpecDnsConfig {
  /**
   * @schema CronWorkflowSpecWorkflowSpecDnsConfig#nameservers
   */
  readonly nameservers?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecDnsConfig#options
   */
  readonly options?: CronWorkflowSpecWorkflowSpecDnsConfigOptions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecDnsConfig#searches
   */
  readonly searches?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecDnsConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecDnsConfig(obj: CronWorkflowSpecWorkflowSpecDnsConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nameservers': obj.nameservers?.map(y => y),
    'options': obj.options?.map(y => toJson_CronWorkflowSpecWorkflowSpecDnsConfigOptions(y)),
    'searches': obj.searches?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecExecutor
 */
export interface CronWorkflowSpecWorkflowSpecExecutor {
  /**
   * @schema CronWorkflowSpecWorkflowSpecExecutor#serviceAccountName
   */
  readonly serviceAccountName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecExecutor' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecExecutor(obj: CronWorkflowSpecWorkflowSpecExecutor | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'serviceAccountName': obj.serviceAccountName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooks
 */
export interface CronWorkflowSpecWorkflowSpecHooks {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooks#arguments
   */
  readonly arguments?: CronWorkflowSpecWorkflowSpecHooksArguments;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooks#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooks#template
   */
  readonly template?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooks#templateRef
   */
  readonly templateRef?: CronWorkflowSpecWorkflowSpecHooksTemplateRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooks' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooks(obj: CronWorkflowSpecWorkflowSpecHooks | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'arguments': toJson_CronWorkflowSpecWorkflowSpecHooksArguments(obj.arguments),
    'expression': obj.expression,
    'template': obj.template,
    'templateRef': toJson_CronWorkflowSpecWorkflowSpecHooksTemplateRef(obj.templateRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHostAliases
 */
export interface CronWorkflowSpecWorkflowSpecHostAliases {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHostAliases#hostnames
   */
  readonly hostnames?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecHostAliases#ip
   */
  readonly ip?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHostAliases' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHostAliases(obj: CronWorkflowSpecWorkflowSpecHostAliases | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'hostnames': obj.hostnames?.map(y => y),
    'ip': obj.ip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecImagePullSecrets
 */
export interface CronWorkflowSpecWorkflowSpecImagePullSecrets {
  /**
   * @schema CronWorkflowSpecWorkflowSpecImagePullSecrets#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecImagePullSecrets' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecImagePullSecrets(obj: CronWorkflowSpecWorkflowSpecImagePullSecrets | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecMetrics
 */
export interface CronWorkflowSpecWorkflowSpecMetrics {
  /**
   * @schema CronWorkflowSpecWorkflowSpecMetrics#prometheus
   */
  readonly prometheus: CronWorkflowSpecWorkflowSpecMetricsPrometheus[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecMetrics' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecMetrics(obj: CronWorkflowSpecWorkflowSpecMetrics | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'prometheus': obj.prometheus?.map(y => toJson_CronWorkflowSpecWorkflowSpecMetricsPrometheus(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudget
 */
export interface CronWorkflowSpecWorkflowSpecPodDisruptionBudget {
  /**
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudget#maxUnavailable
   */
  readonly maxUnavailable?: CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMaxUnavailable;

  /**
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudget#minAvailable
   */
  readonly minAvailable?: CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMinAvailable;

  /**
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudget#selector
   */
  readonly selector?: CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecPodDisruptionBudget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecPodDisruptionBudget(obj: CronWorkflowSpecWorkflowSpecPodDisruptionBudget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxUnavailable': obj.maxUnavailable?.value,
    'minAvailable': obj.minAvailable?.value,
    'selector': toJson_CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector(obj.selector),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecPodGc
 */
export interface CronWorkflowSpecWorkflowSpecPodGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecPodGc#deleteDelayDuration
   */
  readonly deleteDelayDuration?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecPodGc#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecPodGcLabelSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecPodGc#strategy
   */
  readonly strategy?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecPodGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecPodGc(obj: CronWorkflowSpecWorkflowSpecPodGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'deleteDelayDuration': obj.deleteDelayDuration,
    'labelSelector': toJson_CronWorkflowSpecWorkflowSpecPodGcLabelSelector(obj.labelSelector),
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecPodMetadata(obj: CronWorkflowSpecWorkflowSpecPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecRetryStrategy
 */
export interface CronWorkflowSpecWorkflowSpecRetryStrategy {
  /**
   * @schema CronWorkflowSpecWorkflowSpecRetryStrategy#affinity
   */
  readonly affinity?: CronWorkflowSpecWorkflowSpecRetryStrategyAffinity;

  /**
   * @schema CronWorkflowSpecWorkflowSpecRetryStrategy#backoff
   */
  readonly backoff?: CronWorkflowSpecWorkflowSpecRetryStrategyBackoff;

  /**
   * @schema CronWorkflowSpecWorkflowSpecRetryStrategy#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecRetryStrategy#limit
   */
  readonly limit?: CronWorkflowSpecWorkflowSpecRetryStrategyLimit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecRetryStrategy#retryPolicy
   */
  readonly retryPolicy?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecRetryStrategy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecRetryStrategy(obj: CronWorkflowSpecWorkflowSpecRetryStrategy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'affinity': toJson_CronWorkflowSpecWorkflowSpecRetryStrategyAffinity(obj.affinity),
    'backoff': toJson_CronWorkflowSpecWorkflowSpecRetryStrategyBackoff(obj.backoff),
    'expression': obj.expression,
    'limit': obj.limit?.value,
    'retryPolicy': obj.retryPolicy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecSecurityContext {
  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#fsGroupChangePolicy
   */
  readonly fsGroupChangePolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#seccompProfile
   */
  readonly seccompProfile?: CronWorkflowSpecWorkflowSpecSecurityContextSeccompProfile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#sysctls
   */
  readonly sysctls?: CronWorkflowSpecWorkflowSpecSecurityContextSysctls[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecSecurityContext(obj: CronWorkflowSpecWorkflowSpecSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsGroup': obj.fsGroup,
    'fsGroupChangePolicy': obj.fsGroupChangePolicy,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_CronWorkflowSpecWorkflowSpecSecurityContextSeccompProfile(obj.seccompProfile),
    'supplementalGroups': obj.supplementalGroups?.map(y => y),
    'sysctls': obj.sysctls?.map(y => toJson_CronWorkflowSpecWorkflowSpecSecurityContextSysctls(y)),
    'windowsOptions': toJson_CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecSynchronization
 */
export interface CronWorkflowSpecWorkflowSpecSynchronization {
  /**
   * @schema CronWorkflowSpecWorkflowSpecSynchronization#mutex
   */
  readonly mutex?: CronWorkflowSpecWorkflowSpecSynchronizationMutex;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSynchronization#semaphore
   */
  readonly semaphore?: CronWorkflowSpecWorkflowSpecSynchronizationSemaphore;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecSynchronization' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecSynchronization(obj: CronWorkflowSpecWorkflowSpecSynchronization | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mutex': toJson_CronWorkflowSpecWorkflowSpecSynchronizationMutex(obj.mutex),
    'semaphore': toJson_CronWorkflowSpecWorkflowSpecSynchronizationSemaphore(obj.semaphore),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaults {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#activeDeadlineSeconds
   */
  readonly activeDeadlineSeconds?: CronWorkflowSpecWorkflowSpecTemplateDefaultsActiveDeadlineSeconds;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#affinity
   */
  readonly affinity?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinity;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#archiveLocation
   */
  readonly archiveLocation?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#automountServiceAccountToken
   */
  readonly automountServiceAccountToken?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#container
   */
  readonly container?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#containerSet
   */
  readonly containerSet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#daemon
   */
  readonly daemon?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#dag
   */
  readonly dag?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDag;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#data
   */
  readonly data?: CronWorkflowSpecWorkflowSpecTemplateDefaultsData;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#executor
   */
  readonly executor?: CronWorkflowSpecWorkflowSpecTemplateDefaultsExecutor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#failFast
   */
  readonly failFast?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#hostAliases
   */
  readonly hostAliases?: CronWorkflowSpecWorkflowSpecTemplateDefaultsHostAliases[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplateDefaultsHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#initContainers
   */
  readonly initContainers?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#inputs
   */
  readonly inputs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#memoize
   */
  readonly memoize?: CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoize;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#metadata
   */
  readonly metadata?: CronWorkflowSpecWorkflowSpecTemplateDefaultsMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#metrics
   */
  readonly metrics?: CronWorkflowSpecWorkflowSpecTemplateDefaultsMetrics;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#outputs
   */
  readonly outputs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#parallelism
   */
  readonly parallelism?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#plugin
   */
  readonly plugin?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#podSpecPatch
   */
  readonly podSpecPatch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#priority
   */
  readonly priority?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#priorityClassName
   */
  readonly priorityClassName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#resource
   */
  readonly resource?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResource;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#retryStrategy
   */
  readonly retryStrategy?: CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategy;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#schedulerName
   */
  readonly schedulerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#script
   */
  readonly script?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScript;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#sidecars
   */
  readonly sidecars?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#steps
   */
  readonly steps?: any[][];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#suspend
   */
  readonly suspend?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSuspend;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#synchronization
   */
  readonly synchronization?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronization;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#timeout
   */
  readonly timeout?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#tolerations
   */
  readonly tolerations?: CronWorkflowSpecWorkflowSpecTemplateDefaultsTolerations[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaults#volumes
   */
  readonly volumes?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaults' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaults(obj: CronWorkflowSpecWorkflowSpecTemplateDefaults | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'activeDeadlineSeconds': obj.activeDeadlineSeconds?.value,
    'affinity': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinity(obj.affinity),
    'archiveLocation': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation(obj.archiveLocation),
    'automountServiceAccountToken': obj.automountServiceAccountToken,
    'container': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer(obj.container),
    'containerSet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSet(obj.containerSet),
    'daemon': obj.daemon,
    'dag': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDag(obj.dag),
    'data': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsData(obj.data),
    'executor': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsExecutor(obj.executor),
    'failFast': obj.failFast,
    'hostAliases': obj.hostAliases?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsHostAliases(y)),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsHttp(obj.http),
    'initContainers': obj.initContainers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers(y)),
    'inputs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputs(obj.inputs),
    'memoize': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoize(obj.memoize),
    'metadata': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMetadata(obj.metadata),
    'metrics': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMetrics(obj.metrics),
    'name': obj.name,
    'nodeSelector': ((obj.nodeSelector) === undefined) ? undefined : (Object.entries(obj.nodeSelector).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'outputs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputs(obj.outputs),
    'parallelism': obj.parallelism,
    'plugin': obj.plugin,
    'podSpecPatch': obj.podSpecPatch,
    'priority': obj.priority,
    'priorityClassName': obj.priorityClassName,
    'resource': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResource(obj.resource),
    'retryStrategy': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategy(obj.retryStrategy),
    'schedulerName': obj.schedulerName,
    'script': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScript(obj.script),
    'securityContext': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext(obj.securityContext),
    'serviceAccountName': obj.serviceAccountName,
    'sidecars': obj.sidecars?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars(y)),
    'steps': obj.steps?.map(y => y?.map(y => y)),
    'suspend': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSuspend(obj.suspend),
    'synchronization': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronization(obj.synchronization),
    'timeout': obj.timeout,
    'tolerations': obj.tolerations?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsTolerations(y)),
    'volumes': obj.volumes?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplates
 */
export interface CronWorkflowSpecWorkflowSpecTemplates {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#activeDeadlineSeconds
   */
  readonly activeDeadlineSeconds?: CronWorkflowSpecWorkflowSpecTemplatesActiveDeadlineSeconds;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#affinity
   */
  readonly affinity?: CronWorkflowSpecWorkflowSpecTemplatesAffinity;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#archiveLocation
   */
  readonly archiveLocation?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#automountServiceAccountToken
   */
  readonly automountServiceAccountToken?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#container
   */
  readonly container?: CronWorkflowSpecWorkflowSpecTemplatesContainer;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#containerSet
   */
  readonly containerSet?: CronWorkflowSpecWorkflowSpecTemplatesContainerSet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#daemon
   */
  readonly daemon?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#dag
   */
  readonly dag?: CronWorkflowSpecWorkflowSpecTemplatesDag;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#data
   */
  readonly data?: CronWorkflowSpecWorkflowSpecTemplatesData;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#executor
   */
  readonly executor?: CronWorkflowSpecWorkflowSpecTemplatesExecutor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#failFast
   */
  readonly failFast?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#hostAliases
   */
  readonly hostAliases?: CronWorkflowSpecWorkflowSpecTemplatesHostAliases[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplatesHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#initContainers
   */
  readonly initContainers?: CronWorkflowSpecWorkflowSpecTemplatesInitContainers[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#inputs
   */
  readonly inputs?: CronWorkflowSpecWorkflowSpecTemplatesInputs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#memoize
   */
  readonly memoize?: CronWorkflowSpecWorkflowSpecTemplatesMemoize;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#metadata
   */
  readonly metadata?: CronWorkflowSpecWorkflowSpecTemplatesMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#metrics
   */
  readonly metrics?: CronWorkflowSpecWorkflowSpecTemplatesMetrics;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#outputs
   */
  readonly outputs?: CronWorkflowSpecWorkflowSpecTemplatesOutputs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#parallelism
   */
  readonly parallelism?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#plugin
   */
  readonly plugin?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#podSpecPatch
   */
  readonly podSpecPatch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#priority
   */
  readonly priority?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#priorityClassName
   */
  readonly priorityClassName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#resource
   */
  readonly resource?: CronWorkflowSpecWorkflowSpecTemplatesResource;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#retryStrategy
   */
  readonly retryStrategy?: CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#schedulerName
   */
  readonly schedulerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#script
   */
  readonly script?: CronWorkflowSpecWorkflowSpecTemplatesScript;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplatesSecurityContext;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#sidecars
   */
  readonly sidecars?: CronWorkflowSpecWorkflowSpecTemplatesSidecars[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#steps
   */
  readonly steps?: any[][];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#suspend
   */
  readonly suspend?: CronWorkflowSpecWorkflowSpecTemplatesSuspend;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#synchronization
   */
  readonly synchronization?: CronWorkflowSpecWorkflowSpecTemplatesSynchronization;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#timeout
   */
  readonly timeout?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#tolerations
   */
  readonly tolerations?: CronWorkflowSpecWorkflowSpecTemplatesTolerations[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplates#volumes
   */
  readonly volumes?: CronWorkflowSpecWorkflowSpecTemplatesVolumes[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplates' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplates(obj: CronWorkflowSpecWorkflowSpecTemplates | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'activeDeadlineSeconds': obj.activeDeadlineSeconds?.value,
    'affinity': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinity(obj.affinity),
    'archiveLocation': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation(obj.archiveLocation),
    'automountServiceAccountToken': obj.automountServiceAccountToken,
    'container': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainer(obj.container),
    'containerSet': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSet(obj.containerSet),
    'daemon': obj.daemon,
    'dag': toJson_CronWorkflowSpecWorkflowSpecTemplatesDag(obj.dag),
    'data': toJson_CronWorkflowSpecWorkflowSpecTemplatesData(obj.data),
    'executor': toJson_CronWorkflowSpecWorkflowSpecTemplatesExecutor(obj.executor),
    'failFast': obj.failFast,
    'hostAliases': obj.hostAliases?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesHostAliases(y)),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplatesHttp(obj.http),
    'initContainers': obj.initContainers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainers(y)),
    'inputs': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputs(obj.inputs),
    'memoize': toJson_CronWorkflowSpecWorkflowSpecTemplatesMemoize(obj.memoize),
    'metadata': toJson_CronWorkflowSpecWorkflowSpecTemplatesMetadata(obj.metadata),
    'metrics': toJson_CronWorkflowSpecWorkflowSpecTemplatesMetrics(obj.metrics),
    'name': obj.name,
    'nodeSelector': ((obj.nodeSelector) === undefined) ? undefined : (Object.entries(obj.nodeSelector).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'outputs': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputs(obj.outputs),
    'parallelism': obj.parallelism,
    'plugin': obj.plugin,
    'podSpecPatch': obj.podSpecPatch,
    'priority': obj.priority,
    'priorityClassName': obj.priorityClassName,
    'resource': toJson_CronWorkflowSpecWorkflowSpecTemplatesResource(obj.resource),
    'retryStrategy': toJson_CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy(obj.retryStrategy),
    'schedulerName': obj.schedulerName,
    'script': toJson_CronWorkflowSpecWorkflowSpecTemplatesScript(obj.script),
    'securityContext': toJson_CronWorkflowSpecWorkflowSpecTemplatesSecurityContext(obj.securityContext),
    'serviceAccountName': obj.serviceAccountName,
    'sidecars': obj.sidecars?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecars(y)),
    'steps': obj.steps?.map(y => y?.map(y => y)),
    'suspend': toJson_CronWorkflowSpecWorkflowSpecTemplatesSuspend(obj.suspend),
    'synchronization': toJson_CronWorkflowSpecWorkflowSpecTemplatesSynchronization(obj.synchronization),
    'timeout': obj.timeout,
    'tolerations': obj.tolerations?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesTolerations(y)),
    'volumes': obj.volumes?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumes(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTolerations
 */
export interface CronWorkflowSpecWorkflowSpecTolerations {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTolerations#effect
   */
  readonly effect?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTolerations#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTolerations#operator
   */
  readonly operator?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTolerations#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTolerations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTolerations(obj: CronWorkflowSpecWorkflowSpecTolerations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'effect': obj.effect,
    'key': obj.key,
    'operator': obj.operator,
    'tolerationSeconds': obj.tolerationSeconds,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTtlStrategy
 */
export interface CronWorkflowSpecWorkflowSpecTtlStrategy {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTtlStrategy#secondsAfterCompletion
   */
  readonly secondsAfterCompletion?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTtlStrategy#secondsAfterFailure
   */
  readonly secondsAfterFailure?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTtlStrategy#secondsAfterSuccess
   */
  readonly secondsAfterSuccess?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTtlStrategy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTtlStrategy(obj: CronWorkflowSpecWorkflowSpecTtlStrategy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'secondsAfterCompletion': obj.secondsAfterCompletion,
    'secondsAfterFailure': obj.secondsAfterFailure,
    'secondsAfterSuccess': obj.secondsAfterSuccess,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimGc
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimGc#strategy
   */
  readonly strategy?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumeClaimGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumeClaimGc(obj: CronWorkflowSpecWorkflowSpecVolumeClaimGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplates
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplates {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplates#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplates#kind
   */
  readonly kind?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplates#metadata
   */
  readonly metadata?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplates#spec
   */
  readonly spec?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplates#status
   */
  readonly status?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumeClaimTemplates' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplates(obj: CronWorkflowSpecWorkflowSpecVolumeClaimTemplates | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'kind': obj.kind,
    'metadata': obj.metadata,
    'spec': toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec(obj.spec),
    'status': toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus(obj.status),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumes
 */
export interface CronWorkflowSpecWorkflowSpecVolumes {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#azureDisk
   */
  readonly azureDisk?: CronWorkflowSpecWorkflowSpecVolumesAzureDisk;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#azureFile
   */
  readonly azureFile?: CronWorkflowSpecWorkflowSpecVolumesAzureFile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#cephfs
   */
  readonly cephfs?: CronWorkflowSpecWorkflowSpecVolumesCephfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#cinder
   */
  readonly cinder?: CronWorkflowSpecWorkflowSpecVolumesCinder;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#configMap
   */
  readonly configMap?: CronWorkflowSpecWorkflowSpecVolumesConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#csi
   */
  readonly csi?: CronWorkflowSpecWorkflowSpecVolumesCsi;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#downwardAPI
   */
  readonly downwardApi?: CronWorkflowSpecWorkflowSpecVolumesDownwardApi;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#emptyDir
   */
  readonly emptyDir?: CronWorkflowSpecWorkflowSpecVolumesEmptyDir;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#ephemeral
   */
  readonly ephemeral?: CronWorkflowSpecWorkflowSpecVolumesEphemeral;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#fc
   */
  readonly fc?: CronWorkflowSpecWorkflowSpecVolumesFc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#flexVolume
   */
  readonly flexVolume?: CronWorkflowSpecWorkflowSpecVolumesFlexVolume;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#flocker
   */
  readonly flocker?: CronWorkflowSpecWorkflowSpecVolumesFlocker;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#gitRepo
   */
  readonly gitRepo?: CronWorkflowSpecWorkflowSpecVolumesGitRepo;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#glusterfs
   */
  readonly glusterfs?: CronWorkflowSpecWorkflowSpecVolumesGlusterfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#hostPath
   */
  readonly hostPath?: CronWorkflowSpecWorkflowSpecVolumesHostPath;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#iscsi
   */
  readonly iscsi?: CronWorkflowSpecWorkflowSpecVolumesIscsi;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#nfs
   */
  readonly nfs?: CronWorkflowSpecWorkflowSpecVolumesNfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#portworxVolume
   */
  readonly portworxVolume?: CronWorkflowSpecWorkflowSpecVolumesPortworxVolume;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#projected
   */
  readonly projected?: CronWorkflowSpecWorkflowSpecVolumesProjected;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#quobyte
   */
  readonly quobyte?: CronWorkflowSpecWorkflowSpecVolumesQuobyte;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#rbd
   */
  readonly rbd?: CronWorkflowSpecWorkflowSpecVolumesRbd;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#scaleIO
   */
  readonly scaleIo?: CronWorkflowSpecWorkflowSpecVolumesScaleIo;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#secret
   */
  readonly secret?: CronWorkflowSpecWorkflowSpecVolumesSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#storageos
   */
  readonly storageos?: CronWorkflowSpecWorkflowSpecVolumesStorageos;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumes#vsphereVolume
   */
  readonly vsphereVolume?: CronWorkflowSpecWorkflowSpecVolumesVsphereVolume;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumes' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumes(obj: CronWorkflowSpecWorkflowSpecVolumes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'awsElasticBlockStore': toJson_CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore(obj.awsElasticBlockStore),
    'azureDisk': toJson_CronWorkflowSpecWorkflowSpecVolumesAzureDisk(obj.azureDisk),
    'azureFile': toJson_CronWorkflowSpecWorkflowSpecVolumesAzureFile(obj.azureFile),
    'cephfs': toJson_CronWorkflowSpecWorkflowSpecVolumesCephfs(obj.cephfs),
    'cinder': toJson_CronWorkflowSpecWorkflowSpecVolumesCinder(obj.cinder),
    'configMap': toJson_CronWorkflowSpecWorkflowSpecVolumesConfigMap(obj.configMap),
    'csi': toJson_CronWorkflowSpecWorkflowSpecVolumesCsi(obj.csi),
    'downwardAPI': toJson_CronWorkflowSpecWorkflowSpecVolumesDownwardApi(obj.downwardApi),
    'emptyDir': toJson_CronWorkflowSpecWorkflowSpecVolumesEmptyDir(obj.emptyDir),
    'ephemeral': toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeral(obj.ephemeral),
    'fc': toJson_CronWorkflowSpecWorkflowSpecVolumesFc(obj.fc),
    'flexVolume': toJson_CronWorkflowSpecWorkflowSpecVolumesFlexVolume(obj.flexVolume),
    'flocker': toJson_CronWorkflowSpecWorkflowSpecVolumesFlocker(obj.flocker),
    'gcePersistentDisk': toJson_CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk(obj.gcePersistentDisk),
    'gitRepo': toJson_CronWorkflowSpecWorkflowSpecVolumesGitRepo(obj.gitRepo),
    'glusterfs': toJson_CronWorkflowSpecWorkflowSpecVolumesGlusterfs(obj.glusterfs),
    'hostPath': toJson_CronWorkflowSpecWorkflowSpecVolumesHostPath(obj.hostPath),
    'iscsi': toJson_CronWorkflowSpecWorkflowSpecVolumesIscsi(obj.iscsi),
    'name': obj.name,
    'nfs': toJson_CronWorkflowSpecWorkflowSpecVolumesNfs(obj.nfs),
    'persistentVolumeClaim': toJson_CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim(obj.persistentVolumeClaim),
    'photonPersistentDisk': toJson_CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk(obj.photonPersistentDisk),
    'portworxVolume': toJson_CronWorkflowSpecWorkflowSpecVolumesPortworxVolume(obj.portworxVolume),
    'projected': toJson_CronWorkflowSpecWorkflowSpecVolumesProjected(obj.projected),
    'quobyte': toJson_CronWorkflowSpecWorkflowSpecVolumesQuobyte(obj.quobyte),
    'rbd': toJson_CronWorkflowSpecWorkflowSpecVolumesRbd(obj.rbd),
    'scaleIO': toJson_CronWorkflowSpecWorkflowSpecVolumesScaleIo(obj.scaleIo),
    'secret': toJson_CronWorkflowSpecWorkflowSpecVolumesSecret(obj.secret),
    'storageos': toJson_CronWorkflowSpecWorkflowSpecVolumesStorageos(obj.storageos),
    'vsphereVolume': toJson_CronWorkflowSpecWorkflowSpecVolumesVsphereVolume(obj.vsphereVolume),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecWorkflowMetadata
 */
export interface CronWorkflowSpecWorkflowSpecWorkflowMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecWorkflowMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecWorkflowMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecWorkflowMetadata#labelsFrom
   */
  readonly labelsFrom?: { [key: string]: CronWorkflowSpecWorkflowSpecWorkflowMetadataLabelsFrom };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecWorkflowMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecWorkflowMetadata(obj: CronWorkflowSpecWorkflowSpecWorkflowMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labelsFrom': ((obj.labelsFrom) === undefined) ? undefined : (Object.entries(obj.labelsFrom).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: toJson_CronWorkflowSpecWorkflowSpecWorkflowMetadataLabelsFrom(i[1]) }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecWorkflowTemplateRef
 */
export interface CronWorkflowSpecWorkflowSpecWorkflowTemplateRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecWorkflowTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecWorkflowTemplateRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecWorkflowTemplateRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecWorkflowTemplateRef(obj: CronWorkflowSpecWorkflowSpecWorkflowTemplateRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clusterScope': obj.clusterScope,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinity
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinity {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityNodeAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinity(obj: CronWorkflowSpecWorkflowSpecAffinityNodeAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj.requiredDuringSchedulingIgnoredDuringExecution),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinity
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinity {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinity(obj: CronWorkflowSpecWorkflowSpecAffinityPodAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity(obj: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifacts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#artifactGC
   */
  readonly artifactGc?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#deleted
   */
  readonly deleted?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#fromExpression
   */
  readonly fromExpression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#recurseMode
   */
  readonly recurseMode?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#subPath
   */
  readonly subPath?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifacts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifacts(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifacts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archive': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive(obj.archive),
    'archiveLogs': obj.archiveLogs,
    'artifactGC': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGc(obj.artifactGc),
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzure(obj.azure),
    'deleted': obj.deleted,
    'from': obj.from,
    'fromExpression': obj.fromExpression,
    'gcs': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit(obj.git),
    'globalName': obj.globalName,
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp(obj.http),
    'mode': obj.mode,
    'name': obj.name,
    'optional': obj.optional,
    'oss': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss(obj.oss),
    'path': obj.path,
    'raw': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsRaw(obj.raw),
    'recurseMode': obj.recurseMode,
    's3': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3(obj.s3),
    'subPath': obj.subPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsParameters
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParameters#description
   */
  readonly description?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParameters#enum
   */
  readonly enum?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsParameters(obj: CronWorkflowSpecWorkflowSpecArgumentsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'default': obj.default,
    'description': obj.description,
    'enum': obj.enum?.map(y => y),
    'globalName': obj.globalName,
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArtifactGcPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecArtifactGcPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArtifactGcPodMetadata(obj: CronWorkflowSpecWorkflowSpecArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArtifactGcStrategy
 */
export enum CronWorkflowSpecWorkflowSpecArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema CronWorkflowSpecWorkflowSpecDnsConfigOptions
 */
export interface CronWorkflowSpecWorkflowSpecDnsConfigOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecDnsConfigOptions#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecDnsConfigOptions#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecDnsConfigOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecDnsConfigOptions(obj: CronWorkflowSpecWorkflowSpecDnsConfigOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArguments
 */
export interface CronWorkflowSpecWorkflowSpecHooksArguments {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArguments#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArguments#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecHooksArgumentsParameters[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArguments' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArguments(obj: CronWorkflowSpecWorkflowSpecHooksArguments | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifacts': obj.artifacts?.map(y => toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts(y)),
    'parameters': obj.parameters?.map(y => toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsParameters(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksTemplateRef
 */
export interface CronWorkflowSpecWorkflowSpecHooksTemplateRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksTemplateRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksTemplateRef#template
   */
  readonly template?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksTemplateRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksTemplateRef(obj: CronWorkflowSpecWorkflowSpecHooksTemplateRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clusterScope': obj.clusterScope,
    'name': obj.name,
    'template': obj.template,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus
 */
export interface CronWorkflowSpecWorkflowSpecMetricsPrometheus {
  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus#counter
   */
  readonly counter?: CronWorkflowSpecWorkflowSpecMetricsPrometheusCounter;

  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus#gauge
   */
  readonly gauge?: CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge;

  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus#help
   */
  readonly help: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus#histogram
   */
  readonly histogram?: CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram;

  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus#labels
   */
  readonly labels?: CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus#when
   */
  readonly when?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecMetricsPrometheus' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecMetricsPrometheus(obj: CronWorkflowSpecWorkflowSpecMetricsPrometheus | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'counter': toJson_CronWorkflowSpecWorkflowSpecMetricsPrometheusCounter(obj.counter),
    'gauge': toJson_CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge(obj.gauge),
    'help': obj.help,
    'histogram': toJson_CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram(obj.histogram),
    'labels': obj.labels?.map(y => toJson_CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels(y)),
    'name': obj.name,
    'when': obj.when,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMaxUnavailable
 */
export class CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMaxUnavailable {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMaxUnavailable {
    return new CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMaxUnavailable(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMaxUnavailable {
    return new CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMaxUnavailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMinAvailable
 */
export class CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMinAvailable {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMinAvailable {
    return new CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMinAvailable(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMinAvailable {
    return new CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMinAvailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector
 */
export interface CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector(obj: CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecPodGcLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecPodGcLabelSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecPodGcLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecPodGcLabelSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecPodGcLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecPodGcLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecPodGcLabelSelector(obj: CronWorkflowSpecWorkflowSpecPodGcLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecPodGcLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecRetryStrategyAffinity
 */
export interface CronWorkflowSpecWorkflowSpecRetryStrategyAffinity {
  /**
   * @schema CronWorkflowSpecWorkflowSpecRetryStrategyAffinity#nodeAntiAffinity
   */
  readonly nodeAntiAffinity?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecRetryStrategyAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecRetryStrategyAffinity(obj: CronWorkflowSpecWorkflowSpecRetryStrategyAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeAntiAffinity': obj.nodeAntiAffinity,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecRetryStrategyBackoff
 */
export interface CronWorkflowSpecWorkflowSpecRetryStrategyBackoff {
  /**
   * @schema CronWorkflowSpecWorkflowSpecRetryStrategyBackoff#duration
   */
  readonly duration?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecRetryStrategyBackoff#factor
   */
  readonly factor?: CronWorkflowSpecWorkflowSpecRetryStrategyBackoffFactor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecRetryStrategyBackoff#maxDuration
   */
  readonly maxDuration?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecRetryStrategyBackoff' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecRetryStrategyBackoff(obj: CronWorkflowSpecWorkflowSpecRetryStrategyBackoff | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'duration': obj.duration,
    'factor': obj.factor?.value,
    'maxDuration': obj.maxDuration,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecRetryStrategyLimit
 */
export class CronWorkflowSpecWorkflowSpecRetryStrategyLimit {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecRetryStrategyLimit {
    return new CronWorkflowSpecWorkflowSpecRetryStrategyLimit(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecRetryStrategyLimit {
    return new CronWorkflowSpecWorkflowSpecRetryStrategyLimit(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions(obj: CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecSecurityContextSeccompProfile
 */
export interface CronWorkflowSpecWorkflowSpecSecurityContextSeccompProfile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecSecurityContextSeccompProfile(obj: CronWorkflowSpecWorkflowSpecSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecSecurityContextSysctls
 */
export interface CronWorkflowSpecWorkflowSpecSecurityContextSysctls {
  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecSecurityContextSysctls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecSecurityContextSysctls(obj: CronWorkflowSpecWorkflowSpecSecurityContextSysctls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions(obj: CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecSynchronizationMutex
 */
export interface CronWorkflowSpecWorkflowSpecSynchronizationMutex {
  /**
   * @schema CronWorkflowSpecWorkflowSpecSynchronizationMutex#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSynchronizationMutex#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecSynchronizationMutex' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecSynchronizationMutex(obj: CronWorkflowSpecWorkflowSpecSynchronizationMutex | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecSynchronizationSemaphore
 */
export interface CronWorkflowSpecWorkflowSpecSynchronizationSemaphore {
  /**
   * @schema CronWorkflowSpecWorkflowSpecSynchronizationSemaphore#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecSynchronizationSemaphoreConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSynchronizationSemaphore#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecSynchronizationSemaphore' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecSynchronizationSemaphore(obj: CronWorkflowSpecWorkflowSpecSynchronizationSemaphore | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecSynchronizationSemaphoreConfigMapKeyRef(obj.configMapKeyRef),
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsActiveDeadlineSeconds
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsActiveDeadlineSeconds {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsActiveDeadlineSeconds {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsActiveDeadlineSeconds(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsActiveDeadlineSeconds {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsActiveDeadlineSeconds(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinity
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinity {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinity#nodeAffinity
   */
  readonly nodeAffinity?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinity;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinity#podAffinity
   */
  readonly podAffinity?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinity;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinity;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinity(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeAffinity': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinity(obj.nodeAffinity),
    'podAffinity': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinity(obj.podAffinity),
    'podAntiAffinity': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinity(obj.podAntiAffinity),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocation | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archiveLogs': obj.archiveLogs,
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzure(obj.azure),
    'gcs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit(obj.git),
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttp(obj.http),
    'oss': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss(obj.oss),
    'raw': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationRaw(obj.raw),
    's3': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3(obj.s3),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#args
   */
  readonly args?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#command
   */
  readonly command?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#env
   */
  readonly env?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnv[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#envFrom
   */
  readonly envFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFrom[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#image
   */
  readonly image?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#lifecycle
   */
  readonly lifecycle?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecycle;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#livenessProbe
   */
  readonly livenessProbe?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#ports
   */
  readonly ports?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerPorts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#readinessProbe
   */
  readonly readinessProbe?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResources;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#startupProbe
   */
  readonly startupProbe?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#tty
   */
  readonly tty?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#volumeDevices
   */
  readonly volumeDevices?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeDevices[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeMounts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainer | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecycle(obj.lifecycle),
    'livenessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerPorts(y)),
    'readinessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe(obj.readinessProbe),
    'resources': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResources(obj.resources),
    'securityContext': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext(obj.securityContext),
    'startupProbe': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSet#containers
   */
  readonly containers: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSet#retryStrategy
   */
  readonly retryStrategy?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategy;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSet#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetVolumeMounts[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containers': obj.containers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers(y)),
    'retryStrategy': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategy(obj.retryStrategy),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetVolumeMounts(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDag
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDag {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDag#failFast
   */
  readonly failFast?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDag#target
   */
  readonly target?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDag#tasks
   */
  readonly tasks: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDag' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDag(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDag | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'failFast': obj.failFast,
    'target': obj.target,
    'tasks': obj.tasks?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsData
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsData {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsData#source
   */
  readonly source: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSource;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsData#transformation
   */
  readonly transformation: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataTransformation[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsData' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsData(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsData | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'source': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSource(obj.source),
    'transformation': obj.transformation?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataTransformation(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsExecutor
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsExecutor {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsExecutor#serviceAccountName
   */
  readonly serviceAccountName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsExecutor' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsExecutor(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsExecutor | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'serviceAccountName': obj.serviceAccountName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHostAliases
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsHostAliases {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHostAliases#hostnames
   */
  readonly hostnames?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHostAliases#ip
   */
  readonly ip?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsHostAliases' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsHostAliases(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsHostAliases | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'hostnames': obj.hostnames?.map(y => y),
    'ip': obj.ip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttp#body
   */
  readonly body?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttp#bodyFrom
   */
  readonly bodyFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpBodyFrom;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttp#insecureSkipVerify
   */
  readonly insecureSkipVerify?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttp#method
   */
  readonly method?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttp#successCondition
   */
  readonly successCondition?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttp#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsHttp(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'body': obj.body,
    'bodyFrom': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpBodyFrom(obj.bodyFrom),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeaders(y)),
    'insecureSkipVerify': obj.insecureSkipVerify,
    'method': obj.method,
    'successCondition': obj.successCondition,
    'timeoutSeconds': obj.timeoutSeconds,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#args
   */
  readonly args?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#command
   */
  readonly command?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#env
   */
  readonly env?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnv[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#envFrom
   */
  readonly envFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFrom[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#image
   */
  readonly image?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#lifecycle
   */
  readonly lifecycle?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecycle;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#livenessProbe
   */
  readonly livenessProbe?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#mirrorVolumeMounts
   */
  readonly mirrorVolumeMounts?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#ports
   */
  readonly ports?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersPorts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#readinessProbe
   */
  readonly readinessProbe?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResources;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#startupProbe
   */
  readonly startupProbe?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#tty
   */
  readonly tty?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#volumeDevices
   */
  readonly volumeDevices?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeDevices[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeMounts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecycle(obj.lifecycle),
    'livenessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe(obj.livenessProbe),
    'mirrorVolumeMounts': obj.mirrorVolumeMounts,
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersPorts(y)),
    'readinessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe(obj.readinessProbe),
    'resources': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResources(obj.resources),
    'securityContext': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext(obj.securityContext),
    'startupProbe': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputs#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputs#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParameters[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifacts': obj.artifacts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts(y)),
    'parameters': obj.parameters?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParameters(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoize
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoize {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoize#cache
   */
  readonly cache: CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCache;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoize#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoize#maxAge
   */
  readonly maxAge: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoize' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoize(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoize | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cache': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCache(obj.cache),
    'key': obj.key,
    'maxAge': obj.maxAge,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetadata
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMetadata(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetrics
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsMetrics {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetrics#prometheus
   */
  readonly prometheus: CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheus[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsMetrics' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMetrics(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsMetrics | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'prometheus': obj.prometheus?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheus(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputs#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputs#exitCode
   */
  readonly exitCode?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputs#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParameters[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputs#result
   */
  readonly result?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifacts': obj.artifacts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts(y)),
    'exitCode': obj.exitCode,
    'parameters': obj.parameters?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParameters(y)),
    'result': obj.result,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResource
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResource {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResource#action
   */
  readonly action: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResource#failureCondition
   */
  readonly failureCondition?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResource#flags
   */
  readonly flags?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResource#manifest
   */
  readonly manifest?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResource#manifestFrom
   */
  readonly manifestFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFrom;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResource#mergeStrategy
   */
  readonly mergeStrategy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResource#setOwnerReference
   */
  readonly setOwnerReference?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResource#successCondition
   */
  readonly successCondition?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResource(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'action': obj.action,
    'failureCondition': obj.failureCondition,
    'flags': obj.flags?.map(y => y),
    'manifest': obj.manifest,
    'manifestFrom': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFrom(obj.manifestFrom),
    'mergeStrategy': obj.mergeStrategy,
    'setOwnerReference': obj.setOwnerReference,
    'successCondition': obj.successCondition,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategy
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategy {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategy#affinity
   */
  readonly affinity?: CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyAffinity;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategy#backoff
   */
  readonly backoff?: CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoff;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategy#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategy#limit
   */
  readonly limit?: CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyLimit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategy#retryPolicy
   */
  readonly retryPolicy?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategy(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'affinity': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyAffinity(obj.affinity),
    'backoff': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoff(obj.backoff),
    'expression': obj.expression,
    'limit': obj.limit?.value,
    'retryPolicy': obj.retryPolicy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScript {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#args
   */
  readonly args?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#command
   */
  readonly command?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#env
   */
  readonly env?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnv[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#envFrom
   */
  readonly envFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFrom[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#image
   */
  readonly image?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#lifecycle
   */
  readonly lifecycle?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecycle;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#livenessProbe
   */
  readonly livenessProbe?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#ports
   */
  readonly ports?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptPorts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#readinessProbe
   */
  readonly readinessProbe?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResources;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#source
   */
  readonly source: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#startupProbe
   */
  readonly startupProbe?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#tty
   */
  readonly tty?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#volumeDevices
   */
  readonly volumeDevices?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeDevices[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeMounts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScript#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScript' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScript(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScript | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecycle(obj.lifecycle),
    'livenessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptPorts(y)),
    'readinessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe(obj.readinessProbe),
    'resources': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResources(obj.resources),
    'securityContext': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext(obj.securityContext),
    'source': obj.source,
    'startupProbe': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext#fsGroupChangePolicy
   */
  readonly fsGroupChangePolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeLinuxOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext#seccompProfile
   */
  readonly seccompProfile?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeccompProfile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext#sysctls
   */
  readonly sysctls?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSysctls[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsGroup': obj.fsGroup,
    'fsGroupChangePolicy': obj.fsGroupChangePolicy,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeccompProfile(obj.seccompProfile),
    'supplementalGroups': obj.supplementalGroups?.map(y => y),
    'sysctls': obj.sysctls?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSysctls(y)),
    'windowsOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#args
   */
  readonly args?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#command
   */
  readonly command?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#env
   */
  readonly env?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnv[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#envFrom
   */
  readonly envFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFrom[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#image
   */
  readonly image?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#lifecycle
   */
  readonly lifecycle?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecycle;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#livenessProbe
   */
  readonly livenessProbe?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#mirrorVolumeMounts
   */
  readonly mirrorVolumeMounts?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#ports
   */
  readonly ports?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsPorts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#readinessProbe
   */
  readonly readinessProbe?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResources;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#startupProbe
   */
  readonly startupProbe?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#tty
   */
  readonly tty?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#volumeDevices
   */
  readonly volumeDevices?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeDevices[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeMounts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecars | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecycle(obj.lifecycle),
    'livenessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe(obj.livenessProbe),
    'mirrorVolumeMounts': obj.mirrorVolumeMounts,
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsPorts(y)),
    'readinessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe(obj.readinessProbe),
    'resources': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResources(obj.resources),
    'securityContext': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext(obj.securityContext),
    'startupProbe': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSuspend
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSuspend {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSuspend#duration
   */
  readonly duration?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSuspend' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSuspend(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSuspend | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'duration': obj.duration,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronization
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronization {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronization#mutex
   */
  readonly mutex?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationMutex;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronization#semaphore
   */
  readonly semaphore?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphore;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronization' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronization(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronization | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mutex': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationMutex(obj.mutex),
    'semaphore': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphore(obj.semaphore),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsTolerations
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsTolerations {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsTolerations#effect
   */
  readonly effect?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsTolerations#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsTolerations#operator
   */
  readonly operator?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsTolerations#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsTolerations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsTolerations(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsTolerations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'effect': obj.effect,
    'key': obj.key,
    'operator': obj.operator,
    'tolerationSeconds': obj.tolerationSeconds,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAwsElasticBlockStore;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#azureDisk
   */
  readonly azureDisk?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureDisk;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#azureFile
   */
  readonly azureFile?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureFile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#cephfs
   */
  readonly cephfs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#cinder
   */
  readonly cinder?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinder;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#configMap
   */
  readonly configMap?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#csi
   */
  readonly csi?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsi;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#downwardAPI
   */
  readonly downwardApi?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApi;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#emptyDir
   */
  readonly emptyDir?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDir;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#ephemeral
   */
  readonly ephemeral?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeral;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#fc
   */
  readonly fc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#flexVolume
   */
  readonly flexVolume?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolume;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#flocker
   */
  readonly flocker?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlocker;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGcePersistentDisk;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#gitRepo
   */
  readonly gitRepo?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGitRepo;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#glusterfs
   */
  readonly glusterfs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGlusterfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#hostPath
   */
  readonly hostPath?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesHostPath;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#iscsi
   */
  readonly iscsi?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#nfs
   */
  readonly nfs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesNfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPersistentVolumeClaim;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPhotonPersistentDisk;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#portworxVolume
   */
  readonly portworxVolume?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPortworxVolume;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#projected
   */
  readonly projected?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjected;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#quobyte
   */
  readonly quobyte?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesQuobyte;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#rbd
   */
  readonly rbd?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbd;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#scaleIO
   */
  readonly scaleIo?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#secret
   */
  readonly secret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#storageos
   */
  readonly storageos?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageos;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes#vsphereVolume
   */
  readonly vsphereVolume?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesVsphereVolume;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'awsElasticBlockStore': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAwsElasticBlockStore(obj.awsElasticBlockStore),
    'azureDisk': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureDisk(obj.azureDisk),
    'azureFile': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureFile(obj.azureFile),
    'cephfs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfs(obj.cephfs),
    'cinder': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinder(obj.cinder),
    'configMap': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMap(obj.configMap),
    'csi': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsi(obj.csi),
    'downwardAPI': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApi(obj.downwardApi),
    'emptyDir': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDir(obj.emptyDir),
    'ephemeral': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeral(obj.ephemeral),
    'fc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFc(obj.fc),
    'flexVolume': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolume(obj.flexVolume),
    'flocker': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlocker(obj.flocker),
    'gcePersistentDisk': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGcePersistentDisk(obj.gcePersistentDisk),
    'gitRepo': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGitRepo(obj.gitRepo),
    'glusterfs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGlusterfs(obj.glusterfs),
    'hostPath': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesHostPath(obj.hostPath),
    'iscsi': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi(obj.iscsi),
    'name': obj.name,
    'nfs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesNfs(obj.nfs),
    'persistentVolumeClaim': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPersistentVolumeClaim(obj.persistentVolumeClaim),
    'photonPersistentDisk': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPhotonPersistentDisk(obj.photonPersistentDisk),
    'portworxVolume': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPortworxVolume(obj.portworxVolume),
    'projected': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjected(obj.projected),
    'quobyte': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesQuobyte(obj.quobyte),
    'rbd': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbd(obj.rbd),
    'scaleIO': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo(obj.scaleIo),
    'secret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecret(obj.secret),
    'storageos': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageos(obj.storageos),
    'vsphereVolume': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesVsphereVolume(obj.vsphereVolume),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesActiveDeadlineSeconds
 */
export class CronWorkflowSpecWorkflowSpecTemplatesActiveDeadlineSeconds {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesActiveDeadlineSeconds {
    return new CronWorkflowSpecWorkflowSpecTemplatesActiveDeadlineSeconds(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesActiveDeadlineSeconds {
    return new CronWorkflowSpecWorkflowSpecTemplatesActiveDeadlineSeconds(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinity
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinity {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinity#nodeAffinity
   */
  readonly nodeAffinity?: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinity#podAffinity
   */
  readonly podAffinity?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinity(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeAffinity': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity(obj.nodeAffinity),
    'podAffinity': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity(obj.podAffinity),
    'podAntiAffinity': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity(obj.podAntiAffinity),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archiveLogs': obj.archiveLogs,
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzure(obj.azure),
    'gcs': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit(obj.git),
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp(obj.http),
    'oss': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss(obj.oss),
    'raw': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationRaw(obj.raw),
    's3': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3(obj.s3),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainer {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#args
   */
  readonly args?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#command
   */
  readonly command?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#env
   */
  readonly env?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnv[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#envFrom
   */
  readonly envFrom?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#image
   */
  readonly image: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#lifecycle
   */
  readonly lifecycle?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#livenessProbe
   */
  readonly livenessProbe?: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#ports
   */
  readonly ports?: CronWorkflowSpecWorkflowSpecTemplatesContainerPorts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#readinessProbe
   */
  readonly readinessProbe?: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplatesContainerResources;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#startupProbe
   */
  readonly startupProbe?: CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#tty
   */
  readonly tty?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#volumeDevices
   */
  readonly volumeDevices?: CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainer' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainer(obj: CronWorkflowSpecWorkflowSpecTemplatesContainer | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle(obj.lifecycle),
    'livenessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerPorts(y)),
    'readinessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe(obj.readinessProbe),
    'resources': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerResources(obj.resources),
    'securityContext': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext(obj.securityContext),
    'startupProbe': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSet#containers
   */
  readonly containers: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSet#retryStrategy
   */
  readonly retryStrategy?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategy;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSet#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetVolumeMounts[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSet(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containers': obj.containers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers(y)),
    'retryStrategy': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategy(obj.retryStrategy),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetVolumeMounts(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDag
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDag {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDag#failFast
   */
  readonly failFast?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDag#target
   */
  readonly target?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDag#tasks
   */
  readonly tasks: CronWorkflowSpecWorkflowSpecTemplatesDagTasks[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDag' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDag(obj: CronWorkflowSpecWorkflowSpecTemplatesDag | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'failFast': obj.failFast,
    'target': obj.target,
    'tasks': obj.tasks?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasks(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesData
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesData {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesData#source
   */
  readonly source: CronWorkflowSpecWorkflowSpecTemplatesDataSource;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesData#transformation
   */
  readonly transformation: CronWorkflowSpecWorkflowSpecTemplatesDataTransformation[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesData' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesData(obj: CronWorkflowSpecWorkflowSpecTemplatesData | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'source': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSource(obj.source),
    'transformation': obj.transformation?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesDataTransformation(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesExecutor
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesExecutor {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesExecutor#serviceAccountName
   */
  readonly serviceAccountName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesExecutor' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesExecutor(obj: CronWorkflowSpecWorkflowSpecTemplatesExecutor | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'serviceAccountName': obj.serviceAccountName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesHostAliases
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesHostAliases {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHostAliases#hostnames
   */
  readonly hostnames?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHostAliases#ip
   */
  readonly ip?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesHostAliases' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesHostAliases(obj: CronWorkflowSpecWorkflowSpecTemplatesHostAliases | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'hostnames': obj.hostnames?.map(y => y),
    'ip': obj.ip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttp#body
   */
  readonly body?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttp#bodyFrom
   */
  readonly bodyFrom?: CronWorkflowSpecWorkflowSpecTemplatesHttpBodyFrom;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplatesHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttp#insecureSkipVerify
   */
  readonly insecureSkipVerify?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttp#method
   */
  readonly method?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttp#successCondition
   */
  readonly successCondition?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttp#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesHttp(obj: CronWorkflowSpecWorkflowSpecTemplatesHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'body': obj.body,
    'bodyFrom': toJson_CronWorkflowSpecWorkflowSpecTemplatesHttpBodyFrom(obj.bodyFrom),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesHttpHeaders(y)),
    'insecureSkipVerify': obj.insecureSkipVerify,
    'method': obj.method,
    'successCondition': obj.successCondition,
    'timeoutSeconds': obj.timeoutSeconds,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainers {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#args
   */
  readonly args?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#command
   */
  readonly command?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#env
   */
  readonly env?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#envFrom
   */
  readonly envFrom?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#image
   */
  readonly image?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#lifecycle
   */
  readonly lifecycle?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#livenessProbe
   */
  readonly livenessProbe?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#mirrorVolumeMounts
   */
  readonly mirrorVolumeMounts?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#ports
   */
  readonly ports?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#readinessProbe
   */
  readonly readinessProbe?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#startupProbe
   */
  readonly startupProbe?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#tty
   */
  readonly tty?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#volumeDevices
   */
  readonly volumeDevices?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainers(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle(obj.lifecycle),
    'livenessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe(obj.livenessProbe),
    'mirrorVolumeMounts': obj.mirrorVolumeMounts,
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts(y)),
    'readinessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe(obj.readinessProbe),
    'resources': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources(obj.resources),
    'securityContext': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext(obj.securityContext),
    'startupProbe': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputs#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputs#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecTemplatesInputsParameters[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputs(obj: CronWorkflowSpecWorkflowSpecTemplatesInputs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifacts': obj.artifacts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts(y)),
    'parameters': obj.parameters?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsParameters(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMemoize
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMemoize {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMemoize#cache
   */
  readonly cache: CronWorkflowSpecWorkflowSpecTemplatesMemoizeCache;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMemoize#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMemoize#maxAge
   */
  readonly maxAge: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesMemoize' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesMemoize(obj: CronWorkflowSpecWorkflowSpecTemplatesMemoize | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cache': toJson_CronWorkflowSpecWorkflowSpecTemplatesMemoizeCache(obj.cache),
    'key': obj.key,
    'maxAge': obj.maxAge,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMetadata
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesMetadata(obj: CronWorkflowSpecWorkflowSpecTemplatesMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMetrics
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMetrics {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetrics#prometheus
   */
  readonly prometheus: CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesMetrics' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesMetrics(obj: CronWorkflowSpecWorkflowSpecTemplatesMetrics | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'prometheus': obj.prometheus?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputs#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputs#exitCode
   */
  readonly exitCode?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputs#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputs#result
   */
  readonly result?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputs(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifacts': obj.artifacts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts(y)),
    'exitCode': obj.exitCode,
    'parameters': obj.parameters?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters(y)),
    'result': obj.result,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResource
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResource {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResource#action
   */
  readonly action: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResource#failureCondition
   */
  readonly failureCondition?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResource#flags
   */
  readonly flags?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResource#manifest
   */
  readonly manifest?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResource#manifestFrom
   */
  readonly manifestFrom?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFrom;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResource#mergeStrategy
   */
  readonly mergeStrategy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResource#setOwnerReference
   */
  readonly setOwnerReference?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResource#successCondition
   */
  readonly successCondition?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResource(obj: CronWorkflowSpecWorkflowSpecTemplatesResource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'action': obj.action,
    'failureCondition': obj.failureCondition,
    'flags': obj.flags?.map(y => y),
    'manifest': obj.manifest,
    'manifestFrom': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFrom(obj.manifestFrom),
    'mergeStrategy': obj.mergeStrategy,
    'setOwnerReference': obj.setOwnerReference,
    'successCondition': obj.successCondition,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy#affinity
   */
  readonly affinity?: CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyAffinity;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy#backoff
   */
  readonly backoff?: CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy#limit
   */
  readonly limit?: CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyLimit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy#retryPolicy
   */
  readonly retryPolicy?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy(obj: CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'affinity': toJson_CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyAffinity(obj.affinity),
    'backoff': toJson_CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff(obj.backoff),
    'expression': obj.expression,
    'limit': obj.limit?.value,
    'retryPolicy': obj.retryPolicy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScript
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScript {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#args
   */
  readonly args?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#command
   */
  readonly command?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#env
   */
  readonly env?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnv[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#envFrom
   */
  readonly envFrom?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#image
   */
  readonly image: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#lifecycle
   */
  readonly lifecycle?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#livenessProbe
   */
  readonly livenessProbe?: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#ports
   */
  readonly ports?: CronWorkflowSpecWorkflowSpecTemplatesScriptPorts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#readinessProbe
   */
  readonly readinessProbe?: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplatesScriptResources;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#source
   */
  readonly source: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#startupProbe
   */
  readonly startupProbe?: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#tty
   */
  readonly tty?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#volumeDevices
   */
  readonly volumeDevices?: CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScript' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScript(obj: CronWorkflowSpecWorkflowSpecTemplatesScript | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle(obj.lifecycle),
    'livenessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptPorts(y)),
    'readinessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe(obj.readinessProbe),
    'resources': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptResources(obj.resources),
    'securityContext': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext(obj.securityContext),
    'source': obj.source,
    'startupProbe': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSecurityContext {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#fsGroupChangePolicy
   */
  readonly fsGroupChangePolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#seccompProfile
   */
  readonly seccompProfile?: CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeccompProfile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#sysctls
   */
  readonly sysctls?: CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSecurityContext(obj: CronWorkflowSpecWorkflowSpecTemplatesSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsGroup': obj.fsGroup,
    'fsGroupChangePolicy': obj.fsGroupChangePolicy,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeccompProfile(obj.seccompProfile),
    'supplementalGroups': obj.supplementalGroups?.map(y => y),
    'sysctls': obj.sysctls?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls(y)),
    'windowsOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecars {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#args
   */
  readonly args?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#command
   */
  readonly command?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#env
   */
  readonly env?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#envFrom
   */
  readonly envFrom?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#image
   */
  readonly image?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#lifecycle
   */
  readonly lifecycle?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#livenessProbe
   */
  readonly livenessProbe?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#mirrorVolumeMounts
   */
  readonly mirrorVolumeMounts?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#ports
   */
  readonly ports?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#readinessProbe
   */
  readonly readinessProbe?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#startupProbe
   */
  readonly startupProbe?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#tty
   */
  readonly tty?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#volumeDevices
   */
  readonly volumeDevices?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecars' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecars(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecars | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle(obj.lifecycle),
    'livenessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe(obj.livenessProbe),
    'mirrorVolumeMounts': obj.mirrorVolumeMounts,
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts(y)),
    'readinessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe(obj.readinessProbe),
    'resources': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources(obj.resources),
    'securityContext': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext(obj.securityContext),
    'startupProbe': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSuspend
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSuspend {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSuspend#duration
   */
  readonly duration?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSuspend' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSuspend(obj: CronWorkflowSpecWorkflowSpecTemplatesSuspend | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'duration': obj.duration,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSynchronization
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSynchronization {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSynchronization#mutex
   */
  readonly mutex?: CronWorkflowSpecWorkflowSpecTemplatesSynchronizationMutex;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSynchronization#semaphore
   */
  readonly semaphore?: CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphore;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSynchronization' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSynchronization(obj: CronWorkflowSpecWorkflowSpecTemplatesSynchronization | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mutex': toJson_CronWorkflowSpecWorkflowSpecTemplatesSynchronizationMutex(obj.mutex),
    'semaphore': toJson_CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphore(obj.semaphore),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesTolerations
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesTolerations {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesTolerations#effect
   */
  readonly effect?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesTolerations#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesTolerations#operator
   */
  readonly operator?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesTolerations#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesTolerations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesTolerations(obj: CronWorkflowSpecWorkflowSpecTemplatesTolerations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'effect': obj.effect,
    'key': obj.key,
    'operator': obj.operator,
    'tolerationSeconds': obj.tolerationSeconds,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumes {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#azureDisk
   */
  readonly azureDisk?: CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#azureFile
   */
  readonly azureFile?: CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#cephfs
   */
  readonly cephfs?: CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#cinder
   */
  readonly cinder?: CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#configMap
   */
  readonly configMap?: CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#csi
   */
  readonly csi?: CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#downwardAPI
   */
  readonly downwardApi?: CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApi;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#emptyDir
   */
  readonly emptyDir?: CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#ephemeral
   */
  readonly ephemeral?: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeral;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#fc
   */
  readonly fc?: CronWorkflowSpecWorkflowSpecTemplatesVolumesFc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#flexVolume
   */
  readonly flexVolume?: CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#flocker
   */
  readonly flocker?: CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#gitRepo
   */
  readonly gitRepo?: CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#glusterfs
   */
  readonly glusterfs?: CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#hostPath
   */
  readonly hostPath?: CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#iscsi
   */
  readonly iscsi?: CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#nfs
   */
  readonly nfs?: CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#portworxVolume
   */
  readonly portworxVolume?: CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#projected
   */
  readonly projected?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#quobyte
   */
  readonly quobyte?: CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#rbd
   */
  readonly rbd?: CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#scaleIO
   */
  readonly scaleIo?: CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#secret
   */
  readonly secret?: CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#storageos
   */
  readonly storageos?: CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#vsphereVolume
   */
  readonly vsphereVolume?: CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumes' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumes(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'awsElasticBlockStore': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore(obj.awsElasticBlockStore),
    'azureDisk': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk(obj.azureDisk),
    'azureFile': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile(obj.azureFile),
    'cephfs': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs(obj.cephfs),
    'cinder': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder(obj.cinder),
    'configMap': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap(obj.configMap),
    'csi': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi(obj.csi),
    'downwardAPI': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApi(obj.downwardApi),
    'emptyDir': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir(obj.emptyDir),
    'ephemeral': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeral(obj.ephemeral),
    'fc': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesFc(obj.fc),
    'flexVolume': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume(obj.flexVolume),
    'flocker': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker(obj.flocker),
    'gcePersistentDisk': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk(obj.gcePersistentDisk),
    'gitRepo': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo(obj.gitRepo),
    'glusterfs': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs(obj.glusterfs),
    'hostPath': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath(obj.hostPath),
    'iscsi': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi(obj.iscsi),
    'name': obj.name,
    'nfs': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs(obj.nfs),
    'persistentVolumeClaim': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim(obj.persistentVolumeClaim),
    'photonPersistentDisk': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk(obj.photonPersistentDisk),
    'portworxVolume': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume(obj.portworxVolume),
    'projected': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected(obj.projected),
    'quobyte': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte(obj.quobyte),
    'rbd': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd(obj.rbd),
    'scaleIO': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo(obj.scaleIo),
    'secret': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret(obj.secret),
    'storageos': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos(obj.storageos),
    'vsphereVolume': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume(obj.vsphereVolume),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec#dataSource
   */
  readonly dataSource?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec#dataSourceRef
   */
  readonly dataSourceRef?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSourceRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec#selector
   */
  readonly selector?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec(obj: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources(obj.resources),
    'selector': toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus#allocatedResources
   */
  readonly allocatedResources?: { [key: string]: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusAllocatedResources };

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus#capacity
   */
  readonly capacity?: { [key: string]: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusCapacity };

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus#conditions
   */
  readonly conditions?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus#phase
   */
  readonly phase?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus#resizeStatus
   */
  readonly resizeStatus?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus(obj: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'allocatedResources': ((obj.allocatedResources) === undefined) ? undefined : (Object.entries(obj.allocatedResources).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'capacity': ((obj.capacity) === undefined) ? undefined : (Object.entries(obj.capacity).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'conditions': obj.conditions?.map(y => toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions(y)),
    'phase': obj.phase,
    'resizeStatus': obj.resizeStatus,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore
 */
export interface CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore(obj: CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesAzureDisk
 */
export interface CronWorkflowSpecWorkflowSpecVolumesAzureDisk {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureDisk#diskURI
   */
  readonly diskUri: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesAzureDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesAzureDisk(obj: CronWorkflowSpecWorkflowSpecVolumesAzureDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cachingMode': obj.cachingMode,
    'diskName': obj.diskName,
    'diskURI': obj.diskUri,
    'fsType': obj.fsType,
    'kind': obj.kind,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesAzureFile
 */
export interface CronWorkflowSpecWorkflowSpecVolumesAzureFile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesAzureFile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesAzureFile(obj: CronWorkflowSpecWorkflowSpecVolumesAzureFile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'readOnly': obj.readOnly,
    'secretName': obj.secretName,
    'shareName': obj.shareName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesCephfs
 */
export interface CronWorkflowSpecWorkflowSpecVolumesCephfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCephfs#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecVolumesCephfsSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesCephfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesCephfs(obj: CronWorkflowSpecWorkflowSpecVolumesCephfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'monitors': obj.monitors?.map(y => y),
    'path': obj.path,
    'readOnly': obj.readOnly,
    'secretFile': obj.secretFile,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecVolumesCephfsSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesCinder
 */
export interface CronWorkflowSpecWorkflowSpecVolumesCinder {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCinder#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecVolumesCinderSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCinder#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesCinder' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesCinder(obj: CronWorkflowSpecWorkflowSpecVolumesCinder | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecVolumesCinderSecretRef(obj.secretRef),
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecVolumesConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMap#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecVolumesConfigMapItems[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesConfigMap(obj: CronWorkflowSpecWorkflowSpecVolumesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecVolumesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesCsi
 */
export interface CronWorkflowSpecWorkflowSpecVolumesCsi {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: CronWorkflowSpecWorkflowSpecVolumesCsiNodePublishSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesCsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesCsi(obj: CronWorkflowSpecWorkflowSpecVolumesCsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'nodePublishSecretRef': toJson_CronWorkflowSpecWorkflowSpecVolumesCsiNodePublishSecretRef(obj.nodePublishSecretRef),
    'readOnly': obj.readOnly,
    'volumeAttributes': ((obj.volumeAttributes) === undefined) ? undefined : (Object.entries(obj.volumeAttributes).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApi
 */
export interface CronWorkflowSpecWorkflowSpecVolumesDownwardApi {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApi#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesDownwardApi(obj: CronWorkflowSpecWorkflowSpecVolumesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesEmptyDir
 */
export interface CronWorkflowSpecWorkflowSpecVolumesEmptyDir {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: CronWorkflowSpecWorkflowSpecVolumesEmptyDirSizeLimit;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesEmptyDir' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesEmptyDir(obj: CronWorkflowSpecWorkflowSpecVolumesEmptyDir | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'medium': obj.medium,
    'sizeLimit': obj.sizeLimit?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeral
 */
export interface CronWorkflowSpecWorkflowSpecVolumesEphemeral {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeral#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplate;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesEphemeral' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeral(obj: CronWorkflowSpecWorkflowSpecVolumesEphemeral | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'volumeClaimTemplate': toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplate(obj.volumeClaimTemplate),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesFc
 */
export interface CronWorkflowSpecWorkflowSpecVolumesFc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesFc#targetWWNs
   */
  readonly targetWwNs?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesFc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesFc(obj: CronWorkflowSpecWorkflowSpecVolumesFc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'lun': obj.lun,
    'readOnly': obj.readOnly,
    'targetWWNs': obj.targetWwNs?.map(y => y),
    'wwids': obj.wwids?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolume
 */
export interface CronWorkflowSpecWorkflowSpecVolumesFlexVolume {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolume#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecVolumesFlexVolumeSecretRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesFlexVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesFlexVolume(obj: CronWorkflowSpecWorkflowSpecVolumesFlexVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'options': ((obj.options) === undefined) ? undefined : (Object.entries(obj.options).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecVolumesFlexVolumeSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesFlocker
 */
export interface CronWorkflowSpecWorkflowSpecVolumesFlocker {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlocker#datasetUUID
   */
  readonly datasetUuid?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesFlocker' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesFlocker(obj: CronWorkflowSpecWorkflowSpecVolumesFlocker | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'datasetName': obj.datasetName,
    'datasetUUID': obj.datasetUuid,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk
 */
export interface CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk(obj: CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'pdName': obj.pdName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesGitRepo
 */
export interface CronWorkflowSpecWorkflowSpecVolumesGitRepo {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesGitRepo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesGitRepo(obj: CronWorkflowSpecWorkflowSpecVolumesGitRepo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'directory': obj.directory,
    'repository': obj.repository,
    'revision': obj.revision,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesGlusterfs
 */
export interface CronWorkflowSpecWorkflowSpecVolumesGlusterfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesGlusterfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesGlusterfs(obj: CronWorkflowSpecWorkflowSpecVolumesGlusterfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'endpoints': obj.endpoints,
    'path': obj.path,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesHostPath
 */
export interface CronWorkflowSpecWorkflowSpecVolumesHostPath {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesHostPath#path
   */
  readonly path: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesHostPath' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesHostPath(obj: CronWorkflowSpecWorkflowSpecVolumesHostPath | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi
 */
export interface CronWorkflowSpecWorkflowSpecVolumesIscsi {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecVolumesIscsiSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesIscsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesIscsi(obj: CronWorkflowSpecWorkflowSpecVolumesIscsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'chapAuthDiscovery': obj.chapAuthDiscovery,
    'chapAuthSession': obj.chapAuthSession,
    'fsType': obj.fsType,
    'initiatorName': obj.initiatorName,
    'iqn': obj.iqn,
    'iscsiInterface': obj.iscsiInterface,
    'lun': obj.lun,
    'portals': obj.portals?.map(y => y),
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecVolumesIscsiSecretRef(obj.secretRef),
    'targetPortal': obj.targetPortal,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesNfs
 */
export interface CronWorkflowSpecWorkflowSpecVolumesNfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesNfs#path
   */
  readonly path: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesNfs#server
   */
  readonly server: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesNfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesNfs(obj: CronWorkflowSpecWorkflowSpecVolumesNfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'readOnly': obj.readOnly,
    'server': obj.server,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim
 */
export interface CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim(obj: CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claimName': obj.claimName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk
 */
export interface CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk#pdID
   */
  readonly pdId: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk(obj: CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'pdID': obj.pdId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesPortworxVolume
 */
export interface CronWorkflowSpecWorkflowSpecVolumesPortworxVolume {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesPortworxVolume#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesPortworxVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesPortworxVolume(obj: CronWorkflowSpecWorkflowSpecVolumesPortworxVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjected
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjected {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjected#sources
   */
  readonly sources?: CronWorkflowSpecWorkflowSpecVolumesProjectedSources[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesProjected' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesProjected(obj: CronWorkflowSpecWorkflowSpecVolumesProjected | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'sources': obj.sources?.map(y => toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesQuobyte
 */
export interface CronWorkflowSpecWorkflowSpecVolumesQuobyte {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesQuobyte' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesQuobyte(obj: CronWorkflowSpecWorkflowSpecVolumesQuobyte | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'group': obj.group,
    'readOnly': obj.readOnly,
    'registry': obj.registry,
    'tenant': obj.tenant,
    'user': obj.user,
    'volume': obj.volume,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesRbd
 */
export interface CronWorkflowSpecWorkflowSpecVolumesRbd {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#image
   */
  readonly image: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecVolumesRbdSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesRbd' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesRbd(obj: CronWorkflowSpecWorkflowSpecVolumesRbd | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'image': obj.image,
    'keyring': obj.keyring,
    'monitors': obj.monitors?.map(y => y),
    'pool': obj.pool,
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecVolumesRbdSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo
 */
export interface CronWorkflowSpecWorkflowSpecVolumesScaleIo {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#secretRef
   */
  readonly secretRef: CronWorkflowSpecWorkflowSpecVolumesScaleIoSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesScaleIo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesScaleIo(obj: CronWorkflowSpecWorkflowSpecVolumesScaleIo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'gateway': obj.gateway,
    'protectionDomain': obj.protectionDomain,
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecVolumesScaleIoSecretRef(obj.secretRef),
    'sslEnabled': obj.sslEnabled,
    'storageMode': obj.storageMode,
    'storagePool': obj.storagePool,
    'system': obj.system,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesSecret
 */
export interface CronWorkflowSpecWorkflowSpecVolumesSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesSecret#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecVolumesSecretItems[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesSecret(obj: CronWorkflowSpecWorkflowSpecVolumesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecVolumesSecretItems(y)),
    'optional': obj.optional,
    'secretName': obj.secretName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesStorageos
 */
export interface CronWorkflowSpecWorkflowSpecVolumesStorageos {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesStorageos#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecVolumesStorageosSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesStorageos' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesStorageos(obj: CronWorkflowSpecWorkflowSpecVolumesStorageos | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecVolumesStorageosSecretRef(obj.secretRef),
    'volumeName': obj.volumeName,
    'volumeNamespace': obj.volumeNamespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesVsphereVolume
 */
export interface CronWorkflowSpecWorkflowSpecVolumesVsphereVolume {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesVsphereVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesVsphereVolume(obj: CronWorkflowSpecWorkflowSpecVolumesVsphereVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'storagePolicyID': obj.storagePolicyId,
    'storagePolicyName': obj.storagePolicyName,
    'volumePath': obj.volumePath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecWorkflowMetadataLabelsFrom
 */
export interface CronWorkflowSpecWorkflowSpecWorkflowMetadataLabelsFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecWorkflowMetadataLabelsFrom#expression
   */
  readonly expression: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecWorkflowMetadataLabelsFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecWorkflowMetadataLabelsFrom(obj: CronWorkflowSpecWorkflowSpecWorkflowMetadataLabelsFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'expression': obj.expression,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preference': toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj.preference),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeSelectorTerms': obj.nodeSelectorTerms?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchiveTar;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive#zip
   */
  readonly zip?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'none': obj.none,
    'tar': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchiveTar(obj.tar),
    'zip': obj.zip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGc
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGc#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGcPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGc#strategy
   */
  readonly strategy?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGcStrategy;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGc(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGcPodMetadata(obj.podMetadata),
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzure
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzure(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsRaw(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecArgumentsParametersValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom#event
   */
  readonly event?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom#supplied
   */
  readonly supplied?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom(obj: CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecArgumentsParametersValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'default': obj.default,
    'event': obj.event,
    'expression': obj.expression,
    'jqFilter': obj.jqFilter,
    'jsonPath': obj.jsonPath,
    'parameter': obj.parameter,
    'path': obj.path,
    'supplied': obj.supplied,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchive;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#artifactGC
   */
  readonly artifactGc?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#deleted
   */
  readonly deleted?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#fromExpression
   */
  readonly fromExpression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#recurseMode
   */
  readonly recurseMode?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts#subPath
   */
  readonly subPath?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifacts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archive': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchive(obj.archive),
    'archiveLogs': obj.archiveLogs,
    'artifactGC': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGc(obj.artifactGc),
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzure(obj.azure),
    'deleted': obj.deleted,
    'from': obj.from,
    'fromExpression': obj.fromExpression,
    'gcs': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit(obj.git),
    'globalName': obj.globalName,
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttp(obj.http),
    'mode': obj.mode,
    'name': obj.name,
    'optional': obj.optional,
    'oss': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss(obj.oss),
    'path': obj.path,
    'raw': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsRaw(obj.raw),
    'recurseMode': obj.recurseMode,
    's3': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3(obj.s3),
    'subPath': obj.subPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParameters
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParameters#description
   */
  readonly description?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParameters#enum
   */
  readonly enum?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsParameters(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'default': obj.default,
    'description': obj.description,
    'enum': obj.enum?.map(y => y),
    'globalName': obj.globalName,
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusCounter
 */
export interface CronWorkflowSpecWorkflowSpecMetricsPrometheusCounter {
  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusCounter#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecMetricsPrometheusCounter' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecMetricsPrometheusCounter(obj: CronWorkflowSpecWorkflowSpecMetricsPrometheusCounter | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge
 */
export interface CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge {
  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge#operation
   */
  readonly operation?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge#realtime
   */
  readonly realtime: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge(obj: CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'operation': obj.operation,
    'realtime': obj.realtime,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram
 */
export interface CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram {
  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram#buckets
   */
  readonly buckets: number[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram(obj: CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'buckets': obj.buckets?.map(y => y),
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels
 */
export interface CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels {
  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels(obj: CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecPodGcLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecPodGcLabelSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecPodGcLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecPodGcLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecPodGcLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecPodGcLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecPodGcLabelSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecPodGcLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecRetryStrategyBackoffFactor
 */
export class CronWorkflowSpecWorkflowSpecRetryStrategyBackoffFactor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecRetryStrategyBackoffFactor {
    return new CronWorkflowSpecWorkflowSpecRetryStrategyBackoffFactor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecRetryStrategyBackoffFactor {
    return new CronWorkflowSpecWorkflowSpecRetryStrategyBackoffFactor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecSynchronizationSemaphoreConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecSynchronizationSemaphoreConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecSynchronizationSemaphoreConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSynchronizationSemaphoreConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecSynchronizationSemaphoreConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecSynchronizationSemaphoreConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecSynchronizationSemaphoreConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecSynchronizationSemaphoreConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinity
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinity {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinity(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj.requiredDuringSchedulingIgnoredDuringExecution),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinity
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinity {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinity(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinity
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinity {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinity(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactory(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzure
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzure(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttp(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationRaw(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnv
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnv {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnv#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnv#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnv#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnv(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFrom#configMapRef
   */
  readonly configMapRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromConfigMapRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFrom#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromSecretRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecycle
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecycle {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecycle#postStart
   */
  readonly postStart?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStart;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecycle#preStop
   */
  readonly preStop?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStop;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecycle(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStart(obj.postStart),
    'preStop': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerPorts
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerPorts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerPorts#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerPorts(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResources#limits
   */
  readonly limits?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResourcesLimits };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResources#requests
   */
  readonly requests?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResourcesRequests };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResources(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext#capabilities
   */
  readonly capabilities?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextCapabilities;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeLinuxOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext#seccompProfile
   */
  readonly seccompProfile?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeccompProfile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeDevices
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeDevices {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeDevices(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeMounts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeMounts(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#args
   */
  readonly args?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#command
   */
  readonly command?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#dependencies
   */
  readonly dependencies?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#env
   */
  readonly env?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnv[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#envFrom
   */
  readonly envFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFrom[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#image
   */
  readonly image?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#lifecycle
   */
  readonly lifecycle?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecycle;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#livenessProbe
   */
  readonly livenessProbe?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#ports
   */
  readonly ports?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersPorts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#readinessProbe
   */
  readonly readinessProbe?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResources;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#startupProbe
   */
  readonly startupProbe?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#tty
   */
  readonly tty?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#volumeDevices
   */
  readonly volumeDevices?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeDevices[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeMounts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'dependencies': obj.dependencies?.map(y => y),
    'env': obj.env?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecycle(obj.lifecycle),
    'livenessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersPorts(y)),
    'readinessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe(obj.readinessProbe),
    'resources': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResources(obj.resources),
    'securityContext': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext(obj.securityContext),
    'startupProbe': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategy
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategy {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategy#duration
   */
  readonly duration?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategy#retries
   */
  readonly retries: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategyRetries;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategy(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'duration': obj.duration,
    'retries': obj.retries?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetVolumeMounts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetVolumeMounts(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks#arguments
   */
  readonly arguments?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArguments;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks#continueOn
   */
  readonly continueOn?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksContinueOn;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks#dependencies
   */
  readonly dependencies?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks#depends
   */
  readonly depends?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks#hooks
   */
  readonly hooks?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooks };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks#inline
   */
  readonly inline?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks#onExit
   */
  readonly onExit?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks#template
   */
  readonly template?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks#templateRef
   */
  readonly templateRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksTemplateRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks#when
   */
  readonly when?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks#withItems
   */
  readonly withItems?: any[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks#withParam
   */
  readonly withParam?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks#withSequence
   */
  readonly withSequence?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequence;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasks | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'arguments': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArguments(obj.arguments),
    'continueOn': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksContinueOn(obj.continueOn),
    'dependencies': obj.dependencies?.map(y => y),
    'depends': obj.depends,
    'hooks': ((obj.hooks) === undefined) ? undefined : (Object.entries(obj.hooks).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooks(i[1]) }), {})),
    'inline': obj.inline,
    'name': obj.name,
    'onExit': obj.onExit,
    'template': obj.template,
    'templateRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksTemplateRef(obj.templateRef),
    'when': obj.when,
    'withItems': obj.withItems?.map(y => y),
    'withParam': obj.withParam,
    'withSequence': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequence(obj.withSequence),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSource
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSource {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSource#artifactPaths
   */
  readonly artifactPaths?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSource(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifactPaths': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths(obj.artifactPaths),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataTransformation
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataTransformation {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataTransformation#expression
   */
  readonly expression: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataTransformation' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataTransformation(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataTransformation | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'expression': obj.expression,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpBodyFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpBodyFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpBodyFrom#bytes
   */
  readonly bytes?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpBodyFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpBodyFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpBodyFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bytes': obj.bytes,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeaders#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeaders#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnv
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnv {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnv#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnv#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnv#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnv(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromConfigMapRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFrom#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromSecretRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecycle
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecycle {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecycle#postStart
   */
  readonly postStart?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStart;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecycle#preStop
   */
  readonly preStop?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStop;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecycle(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStart(obj.postStart),
    'preStop': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersPorts
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersPorts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersPorts#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersPorts(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResources#limits
   */
  readonly limits?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResourcesLimits };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResources#requests
   */
  readonly requests?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResourcesRequests };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResources(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext#capabilities
   */
  readonly capabilities?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextCapabilities;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeLinuxOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext#seccompProfile
   */
  readonly seccompProfile?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeccompProfile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeDevices
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeDevices {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeDevices(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeMounts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeMounts(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchive;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#artifactGC
   */
  readonly artifactGc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#deleted
   */
  readonly deleted?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#from
   */
  readonly from?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#fromExpression
   */
  readonly fromExpression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#recurseMode
   */
  readonly recurseMode?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts#subPath
   */
  readonly subPath?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifacts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archive': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchive(obj.archive),
    'archiveLogs': obj.archiveLogs,
    'artifactGC': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGc(obj.artifactGc),
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzure(obj.azure),
    'deleted': obj.deleted,
    'from': obj.from,
    'fromExpression': obj.fromExpression,
    'gcs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit(obj.git),
    'globalName': obj.globalName,
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttp(obj.http),
    'mode': obj.mode,
    'name': obj.name,
    'optional': obj.optional,
    'oss': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss(obj.oss),
    'path': obj.path,
    'raw': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsRaw(obj.raw),
    'recurseMode': obj.recurseMode,
    's3': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3(obj.s3),
    'subPath': obj.subPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParameters
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParameters#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParameters#description
   */
  readonly description?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParameters#enum
   */
  readonly enum?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParameters#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParameters(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'default': obj.default,
    'description': obj.description,
    'enum': obj.enum?.map(y => y),
    'globalName': obj.globalName,
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCache
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCache {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCache#configMap
   */
  readonly configMap: CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCacheConfigMap;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCache' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCache(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCache | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMap': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCacheConfigMap(obj.configMap),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheus
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheus {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheus#counter
   */
  readonly counter?: CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusCounter;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheus#gauge
   */
  readonly gauge?: CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusGauge;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheus#help
   */
  readonly help: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheus#histogram
   */
  readonly histogram?: CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusHistogram;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheus#labels
   */
  readonly labels?: CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusLabels[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheus#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheus#when
   */
  readonly when?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheus' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheus(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheus | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'counter': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusCounter(obj.counter),
    'gauge': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusGauge(obj.gauge),
    'help': obj.help,
    'histogram': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusHistogram(obj.histogram),
    'labels': obj.labels?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusLabels(y)),
    'name': obj.name,
    'when': obj.when,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchive;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#artifactGC
   */
  readonly artifactGc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#deleted
   */
  readonly deleted?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#from
   */
  readonly from?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#fromExpression
   */
  readonly fromExpression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#recurseMode
   */
  readonly recurseMode?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts#subPath
   */
  readonly subPath?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifacts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archive': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchive(obj.archive),
    'archiveLogs': obj.archiveLogs,
    'artifactGC': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGc(obj.artifactGc),
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzure(obj.azure),
    'deleted': obj.deleted,
    'from': obj.from,
    'fromExpression': obj.fromExpression,
    'gcs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit(obj.git),
    'globalName': obj.globalName,
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttp(obj.http),
    'mode': obj.mode,
    'name': obj.name,
    'optional': obj.optional,
    'oss': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss(obj.oss),
    'path': obj.path,
    'raw': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsRaw(obj.raw),
    'recurseMode': obj.recurseMode,
    's3': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3(obj.s3),
    'subPath': obj.subPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParameters
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParameters#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParameters#description
   */
  readonly description?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParameters#enum
   */
  readonly enum?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParameters#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParameters(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'default': obj.default,
    'description': obj.description,
    'enum': obj.enum?.map(y => y),
    'globalName': obj.globalName,
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFrom#artifact
   */
  readonly artifact: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifact': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact(obj.artifact),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyAffinity
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyAffinity {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyAffinity#nodeAntiAffinity
   */
  readonly nodeAntiAffinity?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyAffinity(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeAntiAffinity': obj.nodeAntiAffinity,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoff
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoff {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoff#duration
   */
  readonly duration?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoff#factor
   */
  readonly factor?: CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoffFactor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoff#maxDuration
   */
  readonly maxDuration?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoff' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoff(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoff | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'duration': obj.duration,
    'factor': obj.factor?.value,
    'maxDuration': obj.maxDuration,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyLimit
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyLimit {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyLimit {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyLimit(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyLimit {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyLimit(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnv
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnv {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnv#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnv#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnv#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnv(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFrom#configMapRef
   */
  readonly configMapRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromConfigMapRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFrom#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromSecretRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecycle
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecycle {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecycle#postStart
   */
  readonly postStart?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStart;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecycle#preStop
   */
  readonly preStop?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStop;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecycle(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStart(obj.postStart),
    'preStop': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptPorts
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptPorts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptPorts#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptPorts(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResources#limits
   */
  readonly limits?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResourcesLimits };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResources#requests
   */
  readonly requests?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResourcesRequests };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResources(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext#capabilities
   */
  readonly capabilities?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextCapabilities;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeLinuxOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext#seccompProfile
   */
  readonly seccompProfile?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeccompProfile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeDevices
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeDevices {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeDevices(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeMounts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeMounts(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeLinuxOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeLinuxOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeccompProfile
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeccompProfile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeccompProfile(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSysctls
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSysctls {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSysctls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSysctls(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextSysctls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextWindowsOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextWindowsOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnv
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnv {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnv#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnv#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnv#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnv(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFrom#configMapRef
   */
  readonly configMapRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromConfigMapRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFrom#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromSecretRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecycle
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecycle {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecycle#postStart
   */
  readonly postStart?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStart;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecycle#preStop
   */
  readonly preStop?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStop;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecycle(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStart(obj.postStart),
    'preStop': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsPorts
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsPorts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsPorts#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsPorts(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResources#limits
   */
  readonly limits?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResourcesLimits };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResources#requests
   */
  readonly requests?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResourcesRequests };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResources(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext#capabilities
   */
  readonly capabilities?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextCapabilities;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeLinuxOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext#seccompProfile
   */
  readonly seccompProfile?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeccompProfile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeDevices
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeDevices {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeDevices(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeMounts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeMounts(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationMutex
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationMutex {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationMutex#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationMutex#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationMutex' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationMutex(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationMutex | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphore
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphore {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphore#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphoreConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphore#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphore' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphore(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphore | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphoreConfigMapKeyRef(obj.configMapKeyRef),
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAwsElasticBlockStore
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAwsElasticBlockStore {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAwsElasticBlockStore' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAwsElasticBlockStore(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAwsElasticBlockStore | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureDisk
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureDisk {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureDisk#diskURI
   */
  readonly diskUri: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureDisk(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cachingMode': obj.cachingMode,
    'diskName': obj.diskName,
    'diskURI': obj.diskUri,
    'fsType': obj.fsType,
    'kind': obj.kind,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureFile
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureFile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureFile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureFile(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesAzureFile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'readOnly': obj.readOnly,
    'secretName': obj.secretName,
    'shareName': obj.shareName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfs#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfsSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'monitors': obj.monitors?.map(y => y),
    'path': obj.path,
    'readOnly': obj.readOnly,
    'secretFile': obj.secretFile,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfsSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinder
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinder {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinder#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinderSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinder#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinder' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinder(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinder | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinderSecretRef(obj.secretRef),
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMap#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMapItems[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsi
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsi {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsiNodePublishSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsi(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'nodePublishSecretRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsiNodePublishSecretRef(obj.nodePublishSecretRef),
    'readOnly': obj.readOnly,
    'volumeAttributes': ((obj.volumeAttributes) === undefined) ? undefined : (Object.entries(obj.volumeAttributes).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApi
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApi {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApi#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItems[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApi(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDir
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDir {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDirSizeLimit;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDir' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDir(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDir | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'medium': obj.medium,
    'sizeLimit': obj.sizeLimit?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeral
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeral {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeral#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplate;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeral' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeral(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeral | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'volumeClaimTemplate': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplate(obj.volumeClaimTemplate),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFc#targetWWNs
   */
  readonly targetWwNs?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'lun': obj.lun,
    'readOnly': obj.readOnly,
    'targetWWNs': obj.targetWwNs?.map(y => y),
    'wwids': obj.wwids?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolume
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolume {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolume#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolumeSecretRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolume(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'options': ((obj.options) === undefined) ? undefined : (Object.entries(obj.options).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolumeSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlocker
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlocker {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlocker#datasetUUID
   */
  readonly datasetUuid?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlocker' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlocker(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlocker | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'datasetName': obj.datasetName,
    'datasetUUID': obj.datasetUuid,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGcePersistentDisk
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGcePersistentDisk {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGcePersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGcePersistentDisk(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGcePersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'pdName': obj.pdName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGitRepo
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGitRepo {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGitRepo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGitRepo(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGitRepo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'directory': obj.directory,
    'repository': obj.repository,
    'revision': obj.revision,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGlusterfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGlusterfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGlusterfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGlusterfs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesGlusterfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'endpoints': obj.endpoints,
    'path': obj.path,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesHostPath
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesHostPath {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesHostPath#path
   */
  readonly path: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesHostPath' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesHostPath(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesHostPath | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsiSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'chapAuthDiscovery': obj.chapAuthDiscovery,
    'chapAuthSession': obj.chapAuthSession,
    'fsType': obj.fsType,
    'initiatorName': obj.initiatorName,
    'iqn': obj.iqn,
    'iscsiInterface': obj.iscsiInterface,
    'lun': obj.lun,
    'portals': obj.portals?.map(y => y),
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsiSecretRef(obj.secretRef),
    'targetPortal': obj.targetPortal,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesNfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesNfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesNfs#path
   */
  readonly path: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesNfs#server
   */
  readonly server: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesNfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesNfs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesNfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'readOnly': obj.readOnly,
    'server': obj.server,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPersistentVolumeClaim
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPersistentVolumeClaim {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPersistentVolumeClaim' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPersistentVolumeClaim(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPersistentVolumeClaim | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claimName': obj.claimName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPhotonPersistentDisk
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPhotonPersistentDisk {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPhotonPersistentDisk#pdID
   */
  readonly pdId: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPhotonPersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPhotonPersistentDisk(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPhotonPersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'pdID': obj.pdId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPortworxVolume
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPortworxVolume {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPortworxVolume#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPortworxVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPortworxVolume(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesPortworxVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjected
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjected {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjected#sources
   */
  readonly sources?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSources[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjected' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjected(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjected | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'sources': obj.sources?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesQuobyte
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesQuobyte {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesQuobyte' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesQuobyte(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesQuobyte | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'group': obj.group,
    'readOnly': obj.readOnly,
    'registry': obj.registry,
    'tenant': obj.tenant,
    'user': obj.user,
    'volume': obj.volume,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbd
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbd {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbd#image
   */
  readonly image: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbd#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbdSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbd' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbd(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbd | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'image': obj.image,
    'keyring': obj.keyring,
    'monitors': obj.monitors?.map(y => y),
    'pool': obj.pool,
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbdSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo#secretRef
   */
  readonly secretRef: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIoSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'gateway': obj.gateway,
    'protectionDomain': obj.protectionDomain,
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIoSecretRef(obj.secretRef),
    'sslEnabled': obj.sslEnabled,
    'storageMode': obj.storageMode,
    'storagePool': obj.storagePool,
    'system': obj.system,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecret#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecretItems[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecretItems(y)),
    'optional': obj.optional,
    'secretName': obj.secretName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageos
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageos {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageos#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageosSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageos' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageos(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageos | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageosSecretRef(obj.secretRef),
    'volumeName': obj.volumeName,
    'volumeNamespace': obj.volumeNamespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesVsphereVolume
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesVsphereVolume {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesVsphereVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesVsphereVolume(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesVsphereVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'storagePolicyID': obj.storagePolicyId,
    'storagePolicyName': obj.storagePolicyName,
    'volumePath': obj.volumePath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj.requiredDuringSchedulingIgnoredDuringExecution),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzure
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzure(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationRaw(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnv
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnv {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnv#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnv#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnv#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnv(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom#configMapRef
   */
  readonly configMapRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle#postStart
   */
  readonly postStart?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle#preStop
   */
  readonly preStop?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart(obj.postStart),
    'preStop': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerPorts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerPorts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerPorts#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerPorts(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerResources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerResources#limits
   */
  readonly limits?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesLimits };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerResources#requests
   */
  readonly requests?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesRequests };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerResources(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#capabilities
   */
  readonly capabilities?: CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#seccompProfile
   */
  readonly seccompProfile?: CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeccompProfile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#args
   */
  readonly args?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#command
   */
  readonly command?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#dependencies
   */
  readonly dependencies?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#env
   */
  readonly env?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnv[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#envFrom
   */
  readonly envFrom?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFrom[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#image
   */
  readonly image?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#lifecycle
   */
  readonly lifecycle?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecycle;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#livenessProbe
   */
  readonly livenessProbe?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#ports
   */
  readonly ports?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersPorts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#readinessProbe
   */
  readonly readinessProbe?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResources;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#startupProbe
   */
  readonly startupProbe?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#tty
   */
  readonly tty?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#volumeDevices
   */
  readonly volumeDevices?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeDevices[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeMounts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'dependencies': obj.dependencies?.map(y => y),
    'env': obj.env?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecycle(obj.lifecycle),
    'livenessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersPorts(y)),
    'readinessProbe': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe(obj.readinessProbe),
    'resources': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResources(obj.resources),
    'securityContext': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext(obj.securityContext),
    'startupProbe': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategy
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategy {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategy#duration
   */
  readonly duration?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategy#retries
   */
  readonly retries: CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategyRetries;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategy(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'duration': obj.duration,
    'retries': obj.retries?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetVolumeMounts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetVolumeMounts(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasks {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#arguments
   */
  readonly arguments?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#continueOn
   */
  readonly continueOn?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#dependencies
   */
  readonly dependencies?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#depends
   */
  readonly depends?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#hooks
   */
  readonly hooks?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooks };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#inline
   */
  readonly inline?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#onExit
   */
  readonly onExit?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#template
   */
  readonly template?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#templateRef
   */
  readonly templateRef?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#when
   */
  readonly when?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#withItems
   */
  readonly withItems?: any[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#withParam
   */
  readonly withParam?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#withSequence
   */
  readonly withSequence?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasks' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasks(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasks | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'arguments': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments(obj.arguments),
    'continueOn': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn(obj.continueOn),
    'dependencies': obj.dependencies?.map(y => y),
    'depends': obj.depends,
    'hooks': ((obj.hooks) === undefined) ? undefined : (Object.entries(obj.hooks).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooks(i[1]) }), {})),
    'inline': obj.inline,
    'name': obj.name,
    'onExit': obj.onExit,
    'template': obj.template,
    'templateRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef(obj.templateRef),
    'when': obj.when,
    'withItems': obj.withItems?.map(y => y),
    'withParam': obj.withParam,
    'withSequence': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence(obj.withSequence),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSource
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSource {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSource#artifactPaths
   */
  readonly artifactPaths?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSource(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifactPaths': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths(obj.artifactPaths),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataTransformation
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataTransformation {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataTransformation#expression
   */
  readonly expression: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataTransformation' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataTransformation(obj: CronWorkflowSpecWorkflowSpecTemplatesDataTransformation | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'expression': obj.expression,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesHttpBodyFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesHttpBodyFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttpBodyFrom#bytes
   */
  readonly bytes?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesHttpBodyFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesHttpBodyFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesHttpBodyFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bytes': obj.bytes,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttpHeaders#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttpHeaders#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle#postStart
   */
  readonly postStart?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle#preStop
   */
  readonly preStop?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart(obj.postStart),
    'preStop': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources#limits
   */
  readonly limits?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesLimits };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources#requests
   */
  readonly requests?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesRequests };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#capabilities
   */
  readonly capabilities?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#seccompProfile
   */
  readonly seccompProfile?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeccompProfile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#artifactGC
   */
  readonly artifactGc?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#deleted
   */
  readonly deleted?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#from
   */
  readonly from?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#fromExpression
   */
  readonly fromExpression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#recurseMode
   */
  readonly recurseMode?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#subPath
   */
  readonly subPath?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archive': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive(obj.archive),
    'archiveLogs': obj.archiveLogs,
    'artifactGC': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGc(obj.artifactGc),
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzure(obj.azure),
    'deleted': obj.deleted,
    'from': obj.from,
    'fromExpression': obj.fromExpression,
    'gcs': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit(obj.git),
    'globalName': obj.globalName,
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp(obj.http),
    'mode': obj.mode,
    'name': obj.name,
    'optional': obj.optional,
    'oss': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss(obj.oss),
    'path': obj.path,
    'raw': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsRaw(obj.raw),
    'recurseMode': obj.recurseMode,
    's3': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3(obj.s3),
    'subPath': obj.subPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParameters
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParameters#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParameters#description
   */
  readonly description?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParameters#enum
   */
  readonly enum?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParameters#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsParameters(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'default': obj.default,
    'description': obj.description,
    'enum': obj.enum?.map(y => y),
    'globalName': obj.globalName,
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMemoizeCache
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMemoizeCache {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMemoizeCache#configMap
   */
  readonly configMap: CronWorkflowSpecWorkflowSpecTemplatesMemoizeCacheConfigMap;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesMemoizeCache' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesMemoizeCache(obj: CronWorkflowSpecWorkflowSpecTemplatesMemoizeCache | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMap': toJson_CronWorkflowSpecWorkflowSpecTemplatesMemoizeCacheConfigMap(obj.configMap),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus#counter
   */
  readonly counter?: CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusCounter;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus#gauge
   */
  readonly gauge?: CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus#help
   */
  readonly help: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus#histogram
   */
  readonly histogram?: CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus#labels
   */
  readonly labels?: CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus#when
   */
  readonly when?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus(obj: CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'counter': toJson_CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusCounter(obj.counter),
    'gauge': toJson_CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge(obj.gauge),
    'help': obj.help,
    'histogram': toJson_CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram(obj.histogram),
    'labels': obj.labels?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels(y)),
    'name': obj.name,
    'when': obj.when,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#artifactGC
   */
  readonly artifactGc?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#deleted
   */
  readonly deleted?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#from
   */
  readonly from?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#fromExpression
   */
  readonly fromExpression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#recurseMode
   */
  readonly recurseMode?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#subPath
   */
  readonly subPath?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archive': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive(obj.archive),
    'archiveLogs': obj.archiveLogs,
    'artifactGC': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGc(obj.artifactGc),
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzure(obj.azure),
    'deleted': obj.deleted,
    'from': obj.from,
    'fromExpression': obj.fromExpression,
    'gcs': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit(obj.git),
    'globalName': obj.globalName,
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp(obj.http),
    'mode': obj.mode,
    'name': obj.name,
    'optional': obj.optional,
    'oss': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss(obj.oss),
    'path': obj.path,
    'raw': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsRaw(obj.raw),
    'recurseMode': obj.recurseMode,
    's3': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3(obj.s3),
    'subPath': obj.subPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters#description
   */
  readonly description?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters#enum
   */
  readonly enum?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'default': obj.default,
    'description': obj.description,
    'enum': obj.enum?.map(y => y),
    'globalName': obj.globalName,
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFrom#artifact
   */
  readonly artifact: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifact': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact(obj.artifact),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyAffinity
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyAffinity {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyAffinity#nodeAntiAffinity
   */
  readonly nodeAntiAffinity?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyAffinity(obj: CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeAntiAffinity': obj.nodeAntiAffinity,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff#duration
   */
  readonly duration?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff#factor
   */
  readonly factor?: CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoffFactor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff#maxDuration
   */
  readonly maxDuration?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff(obj: CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'duration': obj.duration,
    'factor': obj.factor?.value,
    'maxDuration': obj.maxDuration,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyLimit
 */
export class CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyLimit {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyLimit {
    return new CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyLimit(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyLimit {
    return new CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyLimit(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnv
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnv {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnv#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnv#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnv#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnv(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom#configMapRef
   */
  readonly configMapRef?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle#postStart
   */
  readonly postStart?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle#preStop
   */
  readonly preStop?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart(obj.postStart),
    'preStop': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptPorts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptPorts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptPorts#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptPorts(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptResources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptResources#limits
   */
  readonly limits?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesLimits };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptResources#requests
   */
  readonly requests?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesRequests };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptResources(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#capabilities
   */
  readonly capabilities?: CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#seccompProfile
   */
  readonly seccompProfile?: CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeccompProfile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeccompProfile
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeccompProfile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeccompProfile(obj: CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls(obj: CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom#configMapRef
   */
  readonly configMapRef?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle#postStart
   */
  readonly postStart?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle#preStop
   */
  readonly preStop?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart(obj.postStart),
    'preStop': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources#limits
   */
  readonly limits?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesLimits };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources#requests
   */
  readonly requests?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesRequests };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#capabilities
   */
  readonly capabilities?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#seccompProfile
   */
  readonly seccompProfile?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeccompProfile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSynchronizationMutex
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSynchronizationMutex {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSynchronizationMutex#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSynchronizationMutex#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSynchronizationMutex' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSynchronizationMutex(obj: CronWorkflowSpecWorkflowSpecTemplatesSynchronizationMutex | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphore
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphore {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphore#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphore#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphore' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphore(obj: CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphore | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef(obj.configMapKeyRef),
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk#diskURI
   */
  readonly diskUri: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cachingMode': obj.cachingMode,
    'diskName': obj.diskName,
    'diskURI': obj.diskUri,
    'fsType': obj.fsType,
    'kind': obj.kind,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'readOnly': obj.readOnly,
    'secretName': obj.secretName,
    'shareName': obj.shareName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfsSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'monitors': obj.monitors?.map(y => y),
    'path': obj.path,
    'readOnly': obj.readOnly,
    'secretFile': obj.secretFile,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfsSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesCinderSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesCinderSecretRef(obj.secretRef),
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesCsiNodePublishSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'nodePublishSecretRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesCsiNodePublishSecretRef(obj.nodePublishSecretRef),
    'readOnly': obj.readOnly,
    'volumeAttributes': ((obj.volumeAttributes) === undefined) ? undefined : (Object.entries(obj.volumeAttributes).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApi
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApi {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApi#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApi(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDirSizeLimit;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'medium': obj.medium,
    'sizeLimit': obj.sizeLimit?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeral
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeral {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeral#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplate;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeral' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeral(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeral | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'volumeClaimTemplate': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplate(obj.volumeClaimTemplate),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesFc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFc#targetWWNs
   */
  readonly targetWwNs?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesFc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesFc(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesFc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'lun': obj.lun,
    'readOnly': obj.readOnly,
    'targetWWNs': obj.targetWwNs?.map(y => y),
    'wwids': obj.wwids?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolumeSecretRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'options': ((obj.options) === undefined) ? undefined : (Object.entries(obj.options).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolumeSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker#datasetUUID
   */
  readonly datasetUuid?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'datasetName': obj.datasetName,
    'datasetUUID': obj.datasetUuid,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'pdName': obj.pdName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'directory': obj.directory,
    'repository': obj.repository,
    'revision': obj.revision,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'endpoints': obj.endpoints,
    'path': obj.path,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath#path
   */
  readonly path: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsiSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'chapAuthDiscovery': obj.chapAuthDiscovery,
    'chapAuthSession': obj.chapAuthSession,
    'fsType': obj.fsType,
    'initiatorName': obj.initiatorName,
    'iqn': obj.iqn,
    'iscsiInterface': obj.iscsiInterface,
    'lun': obj.lun,
    'portals': obj.portals?.map(y => y),
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsiSecretRef(obj.secretRef),
    'targetPortal': obj.targetPortal,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs#path
   */
  readonly path: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs#server
   */
  readonly server: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'readOnly': obj.readOnly,
    'server': obj.server,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claimName': obj.claimName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk#pdID
   */
  readonly pdId: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'pdID': obj.pdId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected#sources
   */
  readonly sources?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'sources': obj.sources?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'group': obj.group,
    'readOnly': obj.readOnly,
    'registry': obj.registry,
    'tenant': obj.tenant,
    'user': obj.user,
    'volume': obj.volume,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#image
   */
  readonly image: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesRbdSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'image': obj.image,
    'keyring': obj.keyring,
    'monitors': obj.monitors?.map(y => y),
    'pool': obj.pool,
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesRbdSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#secretRef
   */
  readonly secretRef: CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIoSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'gateway': obj.gateway,
    'protectionDomain': obj.protectionDomain,
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIoSecretRef(obj.secretRef),
    'sslEnabled': obj.sslEnabled,
    'storageMode': obj.storageMode,
    'storagePool': obj.storagePool,
    'system': obj.system,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems(y)),
    'optional': obj.optional,
    'secretName': obj.secretName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageosSecretRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageosSecretRef(obj.secretRef),
    'volumeName': obj.volumeName,
    'volumeNamespace': obj.volumeNamespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'storagePolicyID': obj.storagePolicyId,
    'storagePolicyName': obj.storagePolicyName,
    'volumePath': obj.volumePath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource(obj: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSourceRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSourceRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSourceRef#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSourceRef(obj: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources#limits
   */
  readonly limits?: { [key: string]: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesLimits };

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources#requests
   */
  readonly requests?: { [key: string]: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesRequests };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources(obj: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector(obj: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusAllocatedResources
 */
export class CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusAllocatedResources {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusAllocatedResources {
    return new CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusAllocatedResources(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusAllocatedResources {
    return new CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusAllocatedResources(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusCapacity
 */
export class CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusCapacity {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusCapacity {
    return new CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusCapacity(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusCapacity {
    return new CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusCapacity(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions#lastProbeTime
   */
  readonly lastProbeTime?: Date;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions#lastTransitionTime
   */
  readonly lastTransitionTime?: Date;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions#message
   */
  readonly message?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions#reason
   */
  readonly reason?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions#status
   */
  readonly status: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions(obj: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'lastProbeTime': obj.lastProbeTime?.toISOString(),
    'lastTransitionTime': obj.lastTransitionTime?.toISOString(),
    'message': obj.message,
    'reason': obj.reason,
    'status': obj.status,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesCephfsSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesCephfsSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesCephfsSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesCephfsSecretRef(obj: CronWorkflowSpecWorkflowSpecVolumesCephfsSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesCinderSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesCinderSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesCinderSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesCinderSecretRef(obj: CronWorkflowSpecWorkflowSpecVolumesCinderSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMapItems
 */
export interface CronWorkflowSpecWorkflowSpecVolumesConfigMapItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesConfigMapItems(obj: CronWorkflowSpecWorkflowSpecVolumesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesCsiNodePublishSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesCsiNodePublishSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesCsiNodePublishSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesCsiNodePublishSecretRef(obj: CronWorkflowSpecWorkflowSpecVolumesCsiNodePublishSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems
 */
export interface CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems(obj: CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesEmptyDirSizeLimit
 */
export class CronWorkflowSpecWorkflowSpecVolumesEmptyDirSizeLimit {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecVolumesEmptyDirSizeLimit {
    return new CronWorkflowSpecWorkflowSpecVolumesEmptyDirSizeLimit(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecVolumesEmptyDirSizeLimit {
    return new CronWorkflowSpecWorkflowSpecVolumesEmptyDirSizeLimit(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplate
 */
export interface CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplate {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplate#metadata
   */
  readonly metadata?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplate#spec
   */
  readonly spec: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplate(obj: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolumeSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesFlexVolumeSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesFlexVolumeSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesFlexVolumeSecretRef(obj: CronWorkflowSpecWorkflowSpecVolumesFlexVolumeSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesIscsiSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesIscsiSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesIscsiSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesIscsiSecretRef(obj: CronWorkflowSpecWorkflowSpecVolumesIscsiSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSources
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSources#configMap
   */
  readonly configMap?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSources#downwardAPI
   */
  readonly downwardApi?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApi;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSources#secret
   */
  readonly secret?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesProjectedSources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSources(obj: CronWorkflowSpecWorkflowSpecVolumesProjectedSources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMap': toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap(obj.configMap),
    'downwardAPI': toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApi(obj.downwardApi),
    'secret': toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret(obj.secret),
    'serviceAccountToken': toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken(obj.serviceAccountToken),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesRbdSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesRbdSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesRbdSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesRbdSecretRef(obj: CronWorkflowSpecWorkflowSpecVolumesRbdSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIoSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesScaleIoSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesScaleIoSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesScaleIoSecretRef(obj: CronWorkflowSpecWorkflowSpecVolumesScaleIoSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesSecretItems
 */
export interface CronWorkflowSpecWorkflowSpecVolumesSecretItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesSecretItems(obj: CronWorkflowSpecWorkflowSpecVolumesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesStorageosSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesStorageosSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesStorageosSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesStorageosSecretRef(obj: CronWorkflowSpecWorkflowSpecVolumesStorageosSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(obj: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchiveTar {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchiveTar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchiveTar(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchiveTar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'compressionLevel': obj.compressionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGcPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGcPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGcPodMetadata(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGcStrategy
 */
export enum CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuth(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpHeaders(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CaSecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsParametersValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsParametersValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsParametersValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecArgumentsParametersValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchive {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchiveTar;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchive#zip
   */
  readonly zip?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchive' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchive(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchive | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'none': obj.none,
    'tar': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchiveTar(obj.tar),
    'zip': obj.zip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGc
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGc#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGcPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGc#strategy
   */
  readonly strategy?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGcStrategy;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGc(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGcPodMetadata(obj.podMetadata),
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactory(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzure
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzure(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcs(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttp(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsRaw(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom#event
   */
  readonly event?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom#supplied
   */
  readonly supplied?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'default': obj.default,
    'event': obj.event,
    'expression': obj.expression,
    'jqFilter': obj.jqFilter,
    'jsonPath': obj.jsonPath,
    'parameter': obj.parameter,
    'path': obj.path,
    'supplied': obj.supplied,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preference': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj.preference),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeSelectorTerms': obj.nodeSelectorTerms?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuth(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CaSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFrom#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromConfigMapRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromConfigMapRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromConfigMapRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStart
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStart {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStart#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStart#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStart(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStop
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStop {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStop#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStop#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStop(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResourcesLimits
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResourcesLimits {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResourcesLimits(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResourcesRequests
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResourcesRequests {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResourcesRequests(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextCapabilities
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextCapabilities {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextCapabilities(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeLinuxOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeLinuxOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeccompProfile
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeccompProfile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeccompProfile(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextWindowsOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextWindowsOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnv
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnv {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnv#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnv#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnv#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnv(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromConfigMapRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFrom#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromSecretRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecycle
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecycle {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecycle#postStart
   */
  readonly postStart?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStart;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecycle#preStop
   */
  readonly preStop?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStop;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecycle(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStart(obj.postStart),
    'preStop': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersPorts
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersPorts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersPorts#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersPorts(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResources#limits
   */
  readonly limits?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResourcesLimits };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResources#requests
   */
  readonly requests?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResourcesRequests };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResources(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext#capabilities
   */
  readonly capabilities?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextCapabilities;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeLinuxOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext#seccompProfile
   */
  readonly seccompProfile?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeccompProfile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeDevices
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeDevices {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeDevices(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeMounts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeMounts(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategyRetries
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategyRetries {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategyRetries {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategyRetries(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategyRetries {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetRetryStrategyRetries(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArguments
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArguments {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArguments#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArguments#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParameters[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArguments' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArguments(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArguments | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifacts': obj.artifacts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts(y)),
    'parameters': obj.parameters?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParameters(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksContinueOn
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksContinueOn {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksContinueOn#error
   */
  readonly error?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksContinueOn#failed
   */
  readonly failed?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksContinueOn' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksContinueOn(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksContinueOn | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'error': obj.error,
    'failed': obj.failed,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooks
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooks {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooks#arguments
   */
  readonly arguments?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArguments;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooks#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooks#template
   */
  readonly template?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooks#templateRef
   */
  readonly templateRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksTemplateRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooks' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooks(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooks | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'arguments': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArguments(obj.arguments),
    'expression': obj.expression,
    'template': obj.template,
    'templateRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksTemplateRef(obj.templateRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksTemplateRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksTemplateRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksTemplateRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksTemplateRef#template
   */
  readonly template?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksTemplateRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksTemplateRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksTemplateRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clusterScope': obj.clusterScope,
    'name': obj.name,
    'template': obj.template,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequence
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequence {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequence#count
   */
  readonly count?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceCount;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequence#end
   */
  readonly end?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceEnd;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequence#format
   */
  readonly format?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequence#start
   */
  readonly start?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceStart;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequence' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequence(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequence | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'count': obj.count?.value,
    'end': obj.end?.value,
    'format': obj.format,
    'start': obj.start?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchive;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#artifactGC
   */
  readonly artifactGc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#deleted
   */
  readonly deleted?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#from
   */
  readonly from?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#fromExpression
   */
  readonly fromExpression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#recurseMode
   */
  readonly recurseMode?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths#subPath
   */
  readonly subPath?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPaths | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archive': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchive(obj.archive),
    'archiveLogs': obj.archiveLogs,
    'artifactGC': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGc(obj.artifactGc),
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzure(obj.azure),
    'deleted': obj.deleted,
    'from': obj.from,
    'fromExpression': obj.fromExpression,
    'gcs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit(obj.git),
    'globalName': obj.globalName,
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttp(obj.http),
    'mode': obj.mode,
    'name': obj.name,
    'optional': obj.optional,
    'oss': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss(obj.oss),
    'path': obj.path,
    'raw': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsRaw(obj.raw),
    'recurseMode': obj.recurseMode,
    's3': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3(obj.s3),
    'subPath': obj.subPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'secretKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromConfigMapRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromConfigMapRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromConfigMapRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStart
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStart {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStart#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStart(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStop
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStop {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStop#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStop(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResourcesLimits
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResourcesLimits {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResourcesLimits(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResourcesRequests
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResourcesRequests {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResourcesRequests(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextCapabilities
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextCapabilities {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextCapabilities(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeLinuxOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeLinuxOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeccompProfile
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeccompProfile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeccompProfile(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextWindowsOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextWindowsOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchive {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchiveTar;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchive#zip
   */
  readonly zip?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchive' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchive(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchive | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'none': obj.none,
    'tar': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchiveTar(obj.tar),
    'zip': obj.zip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGc#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGcPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGc#strategy
   */
  readonly strategy?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGcStrategy;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGcPodMetadata(obj.podMetadata),
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactory(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzure
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzure(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttp(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsRaw(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom#event
   */
  readonly event?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom#supplied
   */
  readonly supplied?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'default': obj.default,
    'event': obj.event,
    'expression': obj.expression,
    'jqFilter': obj.jqFilter,
    'jsonPath': obj.jsonPath,
    'parameter': obj.parameter,
    'path': obj.path,
    'supplied': obj.supplied,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCacheConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCacheConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCacheConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCacheConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCacheConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCacheConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCacheConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsMemoizeCacheConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusCounter
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusCounter {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusCounter#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusCounter' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusCounter(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusCounter | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusGauge
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusGauge {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusGauge#operation
   */
  readonly operation?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusGauge#realtime
   */
  readonly realtime: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusGauge#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusGauge' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusGauge(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusGauge | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'operation': obj.operation,
    'realtime': obj.realtime,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusHistogram
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusHistogram {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusHistogram#buckets
   */
  readonly buckets: number[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusHistogram#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusHistogram' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusHistogram(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusHistogram | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'buckets': obj.buckets?.map(y => y),
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusLabels
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusLabels {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusLabels#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusLabels#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusLabels' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusLabels(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsMetricsPrometheusLabels | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchive {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchiveTar;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchive#zip
   */
  readonly zip?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchive' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchive(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchive | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'none': obj.none,
    'tar': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchiveTar(obj.tar),
    'zip': obj.zip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGc#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGcPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGc#strategy
   */
  readonly strategy?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGcStrategy;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGcPodMetadata(obj.podMetadata),
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactory(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzure
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzure(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttp(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsRaw(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom#event
   */
  readonly event?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom#supplied
   */
  readonly supplied?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'default': obj.default,
    'event': obj.event,
    'expression': obj.expression,
    'jqFilter': obj.jqFilter,
    'jsonPath': obj.jsonPath,
    'parameter': obj.parameter,
    'path': obj.path,
    'supplied': obj.supplied,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchive;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#artifactGC
   */
  readonly artifactGc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#deleted
   */
  readonly deleted?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#from
   */
  readonly from?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#fromExpression
   */
  readonly fromExpression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#recurseMode
   */
  readonly recurseMode?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact#subPath
   */
  readonly subPath?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifact | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archive': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchive(obj.archive),
    'archiveLogs': obj.archiveLogs,
    'artifactGC': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGc(obj.artifactGc),
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzure(obj.azure),
    'deleted': obj.deleted,
    'from': obj.from,
    'fromExpression': obj.fromExpression,
    'gcs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit(obj.git),
    'globalName': obj.globalName,
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttp(obj.http),
    'mode': obj.mode,
    'name': obj.name,
    'optional': obj.optional,
    'oss': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss(obj.oss),
    'path': obj.path,
    'raw': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactRaw(obj.raw),
    'recurseMode': obj.recurseMode,
    's3': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3(obj.s3),
    'subPath': obj.subPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoffFactor
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoffFactor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoffFactor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoffFactor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoffFactor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsRetryStrategyBackoffFactor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFrom#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromConfigMapRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromConfigMapRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromConfigMapRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStart
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStart {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStart#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStart#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStart(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStop
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStop {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStop#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStop#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStop(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResourcesLimits
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResourcesLimits {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResourcesLimits(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResourcesRequests
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResourcesRequests {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResourcesRequests(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextCapabilities
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextCapabilities {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextCapabilities(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeLinuxOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeLinuxOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeccompProfile
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeccompProfile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeccompProfile(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextWindowsOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextWindowsOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFrom#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromConfigMapRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromConfigMapRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromConfigMapRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStart
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStart {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStart#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStart#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStart(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStop
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStop {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStop#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStop#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStop(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResourcesLimits
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResourcesLimits {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResourcesLimits(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResourcesRequests
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResourcesRequests {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResourcesRequests(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextCapabilities
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextCapabilities {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextCapabilities(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeLinuxOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeLinuxOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeccompProfile
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeccompProfile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeccompProfile(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextWindowsOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextWindowsOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphoreConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphoreConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphoreConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphoreConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphoreConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphoreConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphoreConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSynchronizationSemaphoreConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfsSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfsSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfsSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfsSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCephfsSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinderSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinderSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinderSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinderSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCinderSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMapItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMapItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMapItems(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsiNodePublishSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsiNodePublishSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsiNodePublishSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsiNodePublishSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesCsiNodePublishSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItems(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDirSizeLimit
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDirSizeLimit {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDirSizeLimit {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDirSizeLimit(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDirSizeLimit {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEmptyDirSizeLimit(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplate
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplate {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplate#metadata
   */
  readonly metadata?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplate#spec
   */
  readonly spec: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplate(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolumeSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolumeSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolumeSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolumeSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesFlexVolumeSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsiSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsiSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsiSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsiSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesIscsiSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSources
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSources#configMap
   */
  readonly configMap?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSources#downwardAPI
   */
  readonly downwardApi?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApi;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSources#secret
   */
  readonly secret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesServiceAccountToken;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSources(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMap': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMap(obj.configMap),
    'downwardAPI': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApi(obj.downwardApi),
    'secret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecret(obj.secret),
    'serviceAccountToken': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesServiceAccountToken(obj.serviceAccountToken),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbdSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbdSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbdSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbdSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesRbdSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIoSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIoSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIoSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIoSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesScaleIoSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecretItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecretItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecretItems(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageosSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageosSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageosSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageosSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesStorageosSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preference': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj.preference),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeSelectorTerms': obj.nodeSelectorTerms?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuth(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CaSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesLimits
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesLimits {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesLimits(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesRequests
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesRequests {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesRequests(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeccompProfile
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeccompProfile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeccompProfile(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnv
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnv {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnv#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnv#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnv#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnv(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromConfigMapRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFrom#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromSecretRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecycle
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecycle {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecycle#postStart
   */
  readonly postStart?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStart;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecycle#preStop
   */
  readonly preStop?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStop;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecycle(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStart(obj.postStart),
    'preStop': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersPorts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersPorts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersPorts#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersPorts(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResources#limits
   */
  readonly limits?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResourcesLimits };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResources#requests
   */
  readonly requests?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResourcesRequests };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResources(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext#capabilities
   */
  readonly capabilities?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextCapabilities;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeLinuxOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext#seccompProfile
   */
  readonly seccompProfile?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeccompProfile;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe#grpc
   */
  readonly grpc?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeGrpc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocket;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeDevices
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeDevices {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeDevices(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeMounts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeMounts(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategyRetries
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategyRetries {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategyRetries {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategyRetries(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategyRetries {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetRetryStrategyRetries(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifacts': obj.artifacts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts(y)),
    'parameters': obj.parameters?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn#error
   */
  readonly error?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn#failed
   */
  readonly failed?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'error': obj.error,
    'failed': obj.failed,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooks
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooks {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooks#arguments
   */
  readonly arguments?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArguments;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooks#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooks#template
   */
  readonly template?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooks#templateRef
   */
  readonly templateRef?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksTemplateRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooks' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooks(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooks | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'arguments': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArguments(obj.arguments),
    'expression': obj.expression,
    'template': obj.template,
    'templateRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksTemplateRef(obj.templateRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef#template
   */
  readonly template?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clusterScope': obj.clusterScope,
    'name': obj.name,
    'template': obj.template,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence#count
   */
  readonly count?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceCount;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence#end
   */
  readonly end?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceEnd;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence#format
   */
  readonly format?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence#start
   */
  readonly start?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceStart;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'count': obj.count?.value,
    'end': obj.end?.value,
    'format': obj.format,
    'start': obj.start?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchive;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#artifactGC
   */
  readonly artifactGc?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#deleted
   */
  readonly deleted?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#from
   */
  readonly from?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#fromExpression
   */
  readonly fromExpression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#recurseMode
   */
  readonly recurseMode?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths#subPath
   */
  readonly subPath?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPaths | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archive': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchive(obj.archive),
    'archiveLogs': obj.archiveLogs,
    'artifactGC': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGc(obj.artifactGc),
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzure(obj.azure),
    'deleted': obj.deleted,
    'from': obj.from,
    'fromExpression': obj.fromExpression,
    'gcs': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit(obj.git),
    'globalName': obj.globalName,
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttp(obj.http),
    'mode': obj.mode,
    'name': obj.name,
    'optional': obj.optional,
    'oss': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss(obj.oss),
    'path': obj.path,
    'raw': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsRaw(obj.raw),
    'recurseMode': obj.recurseMode,
    's3': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3(obj.s3),
    'subPath': obj.subPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'secretKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesLimits
 */
export class CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesLimits {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesLimits(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesRequests
 */
export class CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesRequests {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesRequests(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeccompProfile
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeccompProfile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeccompProfile(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchiveTar;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive#zip
   */
  readonly zip?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'none': obj.none,
    'tar': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchiveTar(obj.tar),
    'zip': obj.zip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGc#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGcPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGc#strategy
   */
  readonly strategy?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGcStrategy;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGc(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGcPodMetadata(obj.podMetadata),
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzure
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzure(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsRaw(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom#event
   */
  readonly event?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom#supplied
   */
  readonly supplied?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'default': obj.default,
    'event': obj.event,
    'expression': obj.expression,
    'jqFilter': obj.jqFilter,
    'jsonPath': obj.jsonPath,
    'parameter': obj.parameter,
    'path': obj.path,
    'supplied': obj.supplied,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMemoizeCacheConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMemoizeCacheConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMemoizeCacheConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMemoizeCacheConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMemoizeCacheConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesMemoizeCacheConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesMemoizeCacheConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplatesMemoizeCacheConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusCounter
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusCounter {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusCounter#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusCounter' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusCounter(obj: CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusCounter | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge#operation
   */
  readonly operation?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge#realtime
   */
  readonly realtime: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge(obj: CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'operation': obj.operation,
    'realtime': obj.realtime,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram#buckets
   */
  readonly buckets: number[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram(obj: CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'buckets': obj.buckets?.map(y => y),
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels(obj: CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchiveTar;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive#zip
   */
  readonly zip?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'none': obj.none,
    'tar': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchiveTar(obj.tar),
    'zip': obj.zip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGc#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGcPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGc#strategy
   */
  readonly strategy?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGcStrategy;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGc(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGcPodMetadata(obj.podMetadata),
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzure
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzure(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsRaw(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom#event
   */
  readonly event?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom#supplied
   */
  readonly supplied?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'default': obj.default,
    'event': obj.event,
    'expression': obj.expression,
    'jqFilter': obj.jqFilter,
    'jsonPath': obj.jsonPath,
    'parameter': obj.parameter,
    'path': obj.path,
    'supplied': obj.supplied,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchive;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#artifactGC
   */
  readonly artifactGc?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#deleted
   */
  readonly deleted?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#from
   */
  readonly from?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#fromExpression
   */
  readonly fromExpression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#recurseMode
   */
  readonly recurseMode?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact#subPath
   */
  readonly subPath?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifact | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archive': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchive(obj.archive),
    'archiveLogs': obj.archiveLogs,
    'artifactGC': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGc(obj.artifactGc),
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzure(obj.azure),
    'deleted': obj.deleted,
    'from': obj.from,
    'fromExpression': obj.fromExpression,
    'gcs': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit(obj.git),
    'globalName': obj.globalName,
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttp(obj.http),
    'mode': obj.mode,
    'name': obj.name,
    'optional': obj.optional,
    'oss': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss(obj.oss),
    'path': obj.path,
    'raw': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactRaw(obj.raw),
    'recurseMode': obj.recurseMode,
    's3': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3(obj.s3),
    'subPath': obj.subPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoffFactor
 */
export class CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoffFactor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoffFactor {
    return new CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoffFactor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoffFactor {
    return new CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoffFactor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesLimits
 */
export class CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesLimits {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesLimits(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesRequests
 */
export class CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesRequests {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesRequests(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeccompProfile
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeccompProfile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeccompProfile(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesLimits
 */
export class CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesLimits {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesLimits(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesRequests
 */
export class CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesRequests {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesRequests(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeccompProfile
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeccompProfile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeccompProfile(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfsSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfsSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfsSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfsSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfsSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCinderSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCinderSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesCinderSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesCinderSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesCinderSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsiNodePublishSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCsiNodePublishSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesCsiNodePublishSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesCsiNodePublishSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesCsiNodePublishSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDirSizeLimit
 */
export class CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDirSizeLimit {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDirSizeLimit {
    return new CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDirSizeLimit(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDirSizeLimit {
    return new CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDirSizeLimit(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplate
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplate {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplate#metadata
   */
  readonly metadata?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplate#spec
   */
  readonly spec: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplate(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolumeSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolumeSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolumeSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolumeSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolumeSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsiSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsiSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsiSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsiSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsiSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources#configMap
   */
  readonly configMap?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources#downwardAPI
   */
  readonly downwardApi?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources#secret
   */
  readonly secret?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMap': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap(obj.configMap),
    'downwardAPI': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi(obj.downwardApi),
    'secret': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret(obj.secret),
    'serviceAccountToken': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken(obj.serviceAccountToken),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbdSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesRbdSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesRbdSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesRbdSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesRbdSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIoSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIoSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIoSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIoSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIoSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageosSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageosSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageosSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageosSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageosSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesLimits
 */
export class CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesLimits {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesLimits(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesRequests
 */
export class CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesRequests {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesRequests(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsFieldRef(obj: CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpec
 */
export interface CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpec#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResources;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpec#selector
   */
  readonly selector?: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpec(obj: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap(obj: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApi
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApi {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApi(obj: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret(obj: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken(obj: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'audience': obj.audience,
    'expirationSeconds': obj.expirationSeconds,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(obj: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(obj: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(obj: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(obj: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchiveTar {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchiveTar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchiveTar(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArchiveTar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'compressionLevel': obj.compressionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGcPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGcPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGcPodMetadata(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGcStrategy
 */
export enum CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuth(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpHeaders(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CaSecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsParametersValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromSecretKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromSecretKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromConfigMapRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromConfigMapRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromConfigMapRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStart
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStart {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStart#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStart(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStop
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStop {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStop#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStop(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResourcesLimits
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResourcesLimits {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResourcesLimits(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResourcesRequests
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResourcesRequests {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResourcesRequests(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextCapabilities
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextCapabilities {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextCapabilities(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeLinuxOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeLinuxOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeccompProfile
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeccompProfile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeccompProfile(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextWindowsOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextWindowsOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchive;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#artifactGC
   */
  readonly artifactGc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#deleted
   */
  readonly deleted?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#fromExpression
   */
  readonly fromExpression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#recurseMode
   */
  readonly recurseMode?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts#subPath
   */
  readonly subPath?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifacts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archive': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchive(obj.archive),
    'archiveLogs': obj.archiveLogs,
    'artifactGC': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGc(obj.artifactGc),
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzure(obj.azure),
    'deleted': obj.deleted,
    'from': obj.from,
    'fromExpression': obj.fromExpression,
    'gcs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit(obj.git),
    'globalName': obj.globalName,
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttp(obj.http),
    'mode': obj.mode,
    'name': obj.name,
    'optional': obj.optional,
    'oss': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss(obj.oss),
    'path': obj.path,
    'raw': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsRaw(obj.raw),
    'recurseMode': obj.recurseMode,
    's3': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3(obj.s3),
    'subPath': obj.subPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParameters
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParameters#description
   */
  readonly description?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParameters#enum
   */
  readonly enum?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParameters(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'default': obj.default,
    'description': obj.description,
    'enum': obj.enum?.map(y => y),
    'globalName': obj.globalName,
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArguments
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArguments {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArguments#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArguments#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParameters[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArguments' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArguments(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArguments | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifacts': obj.artifacts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts(y)),
    'parameters': obj.parameters?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParameters(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksTemplateRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksTemplateRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksTemplateRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksTemplateRef#template
   */
  readonly template?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksTemplateRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksTemplateRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksTemplateRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clusterScope': obj.clusterScope,
    'name': obj.name,
    'template': obj.template,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceCount
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceCount {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceCount {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceCount(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceCount {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceCount(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceEnd
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceEnd {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceEnd {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceEnd(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceEnd {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceEnd(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceStart
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceStart {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceStart {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceStart(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceStart {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksWithSequenceStart(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchive {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchive#none
   */
  readonly none?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchiveTar;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchive#zip
   */
  readonly zip?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchive' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchive(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchive | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'none': obj.none,
    'tar': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchiveTar(obj.tar),
    'zip': obj.zip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGc#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGcPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGc#strategy
   */
  readonly strategy?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGcStrategy;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGcPodMetadata(obj.podMetadata),
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactory(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzure
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzure(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttp(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsRaw(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFromSecretKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFromSecretKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsHttpHeadersValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromSecretKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromSecretKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchiveTar {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchiveTar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchiveTar(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArchiveTar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'compressionLevel': obj.compressionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGcPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGcPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGcPodMetadata(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGcStrategy
 */
export enum CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuth(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CaSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsParametersValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchiveTar {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchiveTar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchiveTar(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArchiveTar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'compressionLevel': obj.compressionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGcPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGcPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGcPodMetadata(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGcStrategy
 */
export enum CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuth(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CaSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsParametersValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchive {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchive#none
   */
  readonly none?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchiveTar;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchive#zip
   */
  readonly zip?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchive' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchive(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchive | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'none': obj.none,
    'tar': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchiveTar(obj.tar),
    'zip': obj.zip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGc#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGcPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGc#strategy
   */
  readonly strategy?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGcStrategy;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGcPodMetadata(obj.podMetadata),
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactory(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzure
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzure(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttp(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactRaw(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromSecretKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromSecretKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromSecretKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromSecretKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSource;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpec#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResources;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpec#selector
   */
  readonly selector?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMapItems[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApi
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApi {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApi(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecret#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecretItems[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecretItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesServiceAccountToken
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesServiceAccountToken {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesServiceAccountToken' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesServiceAccountToken(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesServiceAccountToken | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'audience': obj.audience,
    'expirationSeconds': obj.expirationSeconds,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartExec(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopExec(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromConfigMapRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromConfigMapRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromConfigMapRef(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromSecretRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromSecretRef(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStart
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStart {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStart#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStart(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStop
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStop {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStop#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopExec;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGet;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStop(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGet(obj.httpGet),
    'tcpSocket': toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResourcesLimits
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResourcesLimits {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResourcesLimits(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResourcesRequests
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResourcesRequests {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResourcesRequests(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextCapabilities
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextCapabilities {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextCapabilities(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeLinuxOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeLinuxOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeccompProfile
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeccompProfile {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeccompProfile(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextWindowsOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextWindowsOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeExec(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeGrpc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeGrpc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeGrpc(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#artifactGC
   */
  readonly artifactGc?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#deleted
   */
  readonly deleted?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#fromExpression
   */
  readonly fromExpression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#recurseMode
   */
  readonly recurseMode?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#subPath
   */
  readonly subPath?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archive': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive(obj.archive),
    'archiveLogs': obj.archiveLogs,
    'artifactGC': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGc(obj.artifactGc),
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzure(obj.azure),
    'deleted': obj.deleted,
    'from': obj.from,
    'fromExpression': obj.fromExpression,
    'gcs': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit(obj.git),
    'globalName': obj.globalName,
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp(obj.http),
    'mode': obj.mode,
    'name': obj.name,
    'optional': obj.optional,
    'oss': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss(obj.oss),
    'path': obj.path,
    'raw': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw(obj.raw),
    'recurseMode': obj.recurseMode,
    's3': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3(obj.s3),
    'subPath': obj.subPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters#description
   */
  readonly description?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters#enum
   */
  readonly enum?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'default': obj.default,
    'description': obj.description,
    'enum': obj.enum?.map(y => y),
    'globalName': obj.globalName,
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArguments
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArguments {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArguments#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArguments#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParameters[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArguments' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArguments(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArguments | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifacts': obj.artifacts?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts(y)),
    'parameters': obj.parameters?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParameters(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksTemplateRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksTemplateRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksTemplateRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksTemplateRef#template
   */
  readonly template?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksTemplateRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksTemplateRef(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksTemplateRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clusterScope': obj.clusterScope,
    'name': obj.name,
    'template': obj.template,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceCount
 */
export class CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceCount {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceCount {
    return new CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceCount(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceCount {
    return new CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceCount(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceEnd
 */
export class CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceEnd {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceEnd {
    return new CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceEnd(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceEnd {
    return new CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceEnd(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceStart
 */
export class CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceStart {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceStart {
    return new CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceStart(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceStart {
    return new CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceStart(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchive {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchive#none
   */
  readonly none?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchiveTar;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchive#zip
   */
  readonly zip?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchive' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchive(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchive | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'none': obj.none,
    'tar': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchiveTar(obj.tar),
    'zip': obj.zip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGc#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGcPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGc#strategy
   */
  readonly strategy?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGcStrategy;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGc(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGcPodMetadata(obj.podMetadata),
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactory(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzure
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzure(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcs(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttp(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsRaw(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFromSecretKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFromSecretKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesHttpHeadersValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartExec(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopExec(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchiveTar {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchiveTar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchiveTar(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchiveTar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'compressionLevel': obj.compressionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGcPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGcPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGcPodMetadata(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGcStrategy
 */
export enum CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuth(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CaSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchiveTar {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchiveTar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchiveTar(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchiveTar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'compressionLevel': obj.compressionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGcPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGcPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGcPodMetadata(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGcStrategy
 */
export enum CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuth(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CaSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchive {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchive#none
   */
  readonly none?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchiveTar;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchive#zip
   */
  readonly zip?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchive' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchive(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchive | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'none': obj.none,
    'tar': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchiveTar(obj.tar),
    'zip': obj.zip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGc#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGcPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGc#strategy
   */
  readonly strategy?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGcStrategy;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGc(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGcPodMetadata(obj.podMetadata),
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactory(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzure
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzure(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcs(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttp(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactRaw(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartExec(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopExec(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartExec(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopExec(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSource;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpec#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResources;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpec#selector
   */
  readonly selector?: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelector;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpec(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'audience': obj.audience,
    'expirationSeconds': obj.expirationSeconds,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource
 */
export interface CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResources
 */
export interface CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResources(obj: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelector
 */
export interface CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelector(obj: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems(obj: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems(obj: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems(obj: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsArchiveLocationHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromSecretKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromSecretKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopExec(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchive {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchiveTar;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchive#zip
   */
  readonly zip?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchive' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchive(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchive | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'none': obj.none,
    'tar': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchiveTar(obj.tar),
    'zip': obj.zip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGc#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGcPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGc#strategy
   */
  readonly strategy?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGcStrategy;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGcPodMetadata(obj.podMetadata),
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactory(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzure
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzure(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttp(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsRaw(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom#event
   */
  readonly event?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom#supplied
   */
  readonly supplied?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'default': obj.default,
    'event': obj.event,
    'expression': obj.expression,
    'jqFilter': obj.jqFilter,
    'jsonPath': obj.jsonPath,
    'parameter': obj.parameter,
    'path': obj.path,
    'supplied': obj.supplied,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchive;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#artifactGC
   */
  readonly artifactGc?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#deleted
   */
  readonly deleted?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#fromExpression
   */
  readonly fromExpression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#recurseMode
   */
  readonly recurseMode?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts#subPath
   */
  readonly subPath?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifacts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archive': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchive(obj.archive),
    'archiveLogs': obj.archiveLogs,
    'artifactGC': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGc(obj.artifactGc),
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzure(obj.azure),
    'deleted': obj.deleted,
    'from': obj.from,
    'fromExpression': obj.fromExpression,
    'gcs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit(obj.git),
    'globalName': obj.globalName,
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttp(obj.http),
    'mode': obj.mode,
    'name': obj.name,
    'optional': obj.optional,
    'oss': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss(obj.oss),
    'path': obj.path,
    'raw': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsRaw(obj.raw),
    'recurseMode': obj.recurseMode,
    's3': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3(obj.s3),
    'subPath': obj.subPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParameters
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParameters#description
   */
  readonly description?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParameters#enum
   */
  readonly enum?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParameters(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'default': obj.default,
    'description': obj.description,
    'enum': obj.enum?.map(y => y),
    'globalName': obj.globalName,
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchiveTar {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchiveTar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchiveTar(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArchiveTar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'compressionLevel': obj.compressionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGcPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGcPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGcPodMetadata(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGcStrategy
 */
export enum CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuth(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CaSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsInitContainersLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchiveTar {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchiveTar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchiveTar(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArchiveTar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'compressionLevel': obj.compressionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGcPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGcPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGcPodMetadata(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGcStrategy
 */
export enum CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuth(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CaSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsScriptLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsSidecarsLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSource
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSource {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResources(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelector(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMapItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMapItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMapItems(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItems(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecretItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecretItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecretItems(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromSecretKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromSecretKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartExec(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopExec {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopExec(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGet {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGet#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetPort;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGet(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocket {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocket(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive#zip
   */
  readonly zip?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'none': obj.none,
    'tar': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar(obj.tar),
    'zip': obj.zip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGc#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGcPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGc#strategy
   */
  readonly strategy?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGcStrategy;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGc(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGcPodMetadata(obj.podMetadata),
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzure
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzure(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#event
   */
  readonly event?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#supplied
   */
  readonly supplied?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'default': obj.default,
    'event': obj.event,
    'expression': obj.expression,
    'jqFilter': obj.jqFilter,
    'jsonPath': obj.jsonPath,
    'parameter': obj.parameter,
    'path': obj.path,
    'supplied': obj.supplied,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchive;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#artifactGC
   */
  readonly artifactGc?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGc;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactory;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#azure
   */
  readonly azure?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzure;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#deleted
   */
  readonly deleted?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#fromExpression
   */
  readonly fromExpression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttp;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsRaw;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#recurseMode
   */
  readonly recurseMode?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts#subPath
   */
  readonly subPath?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifacts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archive': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchive(obj.archive),
    'archiveLogs': obj.archiveLogs,
    'artifactGC': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGc(obj.artifactGc),
    'artifactory': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactory(obj.artifactory),
    'azure': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzure(obj.azure),
    'deleted': obj.deleted,
    'from': obj.from,
    'fromExpression': obj.fromExpression,
    'gcs': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcs(obj.gcs),
    'git': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit(obj.git),
    'globalName': obj.globalName,
    'hdfs': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs(obj.hdfs),
    'http': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttp(obj.http),
    'mode': obj.mode,
    'name': obj.name,
    'optional': obj.optional,
    'oss': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss(obj.oss),
    'path': obj.path,
    'raw': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsRaw(obj.raw),
    'recurseMode': obj.recurseMode,
    's3': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3(obj.s3),
    'subPath': obj.subPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParameters
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParameters#description
   */
  readonly description?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParameters#enum
   */
  readonly enum?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParameters(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'default': obj.default,
    'description': obj.description,
    'enum': obj.enum?.map(y => y),
    'globalName': obj.globalName,
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchiveTar {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchiveTar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchiveTar(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArchiveTar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'compressionLevel': obj.compressionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGcPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGcPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGcPodMetadata(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGcStrategy
 */
export enum CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuth(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CaSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchiveTar {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchiveTar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchiveTar(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArchiveTar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'compressionLevel': obj.compressionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGcPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGcPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGcPodMetadata(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGcStrategy
 */
export enum CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuth(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CaSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSource
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSource {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResources {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResources(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelector {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelector(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits
 */
export class CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests
 */
export class CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef(obj: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsContainerSetContainersLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchiveTar {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchiveTar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchiveTar(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArchiveTar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'compressionLevel': obj.compressionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGcPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGcPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGcPodMetadata(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGcStrategy
 */
export enum CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuth(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CaSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsParametersValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchive {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchiveTar;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchive#zip
   */
  readonly zip?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchive' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchive(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchive | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'none': obj.none,
    'tar': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchiveTar(obj.tar),
    'zip': obj.zip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGc
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGc#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGc#strategy
   */
  readonly strategy?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGcStrategy;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGc(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata(obj.podMetadata),
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactory(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzure
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzure(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttp(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsRaw(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom#event
   */
  readonly event?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom#supplied
   */
  readonly supplied?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'default': obj.default,
    'event': obj.event,
    'expression': obj.expression,
    'jqFilter': obj.jqFilter,
    'jsonPath': obj.jsonPath,
    'parameter': obj.parameter,
    'path': obj.path,
    'supplied': obj.supplied,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsInputsArtifactsHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsOutputsArtifactsHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocketPort
 */
export class CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocketPort {
    return new CronWorkflowSpecWorkflowSpecTemplatesContainerSetContainersLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'compressionLevel': obj.compressionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGcPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGcPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGcPodMetadata(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGcStrategy
 */
export enum CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuth(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CaSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchive {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchiveTar;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchive#zip
   */
  readonly zip?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchive' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchive(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchive | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'none': obj.none,
    'tar': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchiveTar(obj.tar),
    'zip': obj.zip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGc {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGc#podMetadata
   */
  readonly podMetadata?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGc#strategy
   */
  readonly strategy?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGcStrategy;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGc(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podMetadata': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata(obj.podMetadata),
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactory {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactory(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzure
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzure {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzure#accountKeySecret
   */
  readonly accountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzureAccountKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzure#blob
   */
  readonly blob: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzure#container
   */
  readonly container: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzure(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcs(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit#branch
   */
  readonly branch?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttp {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttp#auth
   */
  readonly auth?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttp#headers
   */
  readonly headers?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpHeaders[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttp(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssAccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss#lifecycleRule
   */
  readonly lifecycleRule?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssLifecycleRule;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssSecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsRaw {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsRaw(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3AccessKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3#caSecret
   */
  readonly caSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CaSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3#encryptionOptions
   */
  readonly encryptionOptions?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptions;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3#key
   */
  readonly key?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3SecretKeySecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom#event
   */
  readonly event?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom#expression
   */
  readonly expression?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom#supplied
   */
  readonly supplied?: any;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'default': obj.default,
    'event': obj.event,
    'expression': obj.expression,
    'jqFilter': obj.jqFilter,
    'jsonPath': obj.jsonPath,
    'parameter': obj.parameter,
    'path': obj.path,
    'supplied': obj.supplied,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits
 */
export class CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests
 */
export class CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchiveTar {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchiveTar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchiveTar(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArchiveTar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'compressionLevel': obj.compressionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGcStrategy
 */
export enum CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuth(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CaSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplateDefaultsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchiveTar {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchiveTar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchiveTar(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArchiveTar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'compressionLevel': obj.compressionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGcStrategy
 */
export enum CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzureAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzureAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzureAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuth#basicAuth
   */
  readonly basicAuth?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuth#clientCert
   */
  readonly clientCert?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCert;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuth#oauth2
   */
  readonly oauth2?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuth(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpHeaders {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpHeaders(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssAccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssAccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssLifecycleRule
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssLifecycleRule {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssLifecycleRule(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssSecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssSecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3AccessKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3AccessKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CaSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CaSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CaSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptions {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptions(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3SecretKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3SecretKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsParametersValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDataSourceArtifactPathsHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesResourceManifestFromArtifactHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor
 */
export class CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCert
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCert {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCert(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2 {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecTemplateDefaultsDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret(obj: CronWorkflowSpecWorkflowSpecTemplatesDagTasksHooksArgumentsArtifactsHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */
