// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema WorkflowArtifactGCTask
 */
export class WorkflowArtifactGcTask extends ApiObject {
  /**
   * Returns the apiVersion and kind for "WorkflowArtifactGCTask"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'argoproj.io/v1alpha1',
    kind: 'WorkflowArtifactGCTask',
  }

  /**
   * Renders a Kubernetes manifest for "WorkflowArtifactGCTask".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: WorkflowArtifactGcTaskProps): any {
    return {
      ...WorkflowArtifactGcTask.GVK,
      ...toJson_WorkflowArtifactGcTaskProps(props),
    };
  }

  /**
   * Defines a "WorkflowArtifactGCTask" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: WorkflowArtifactGcTaskProps) {
    super(scope, id, {
      ...WorkflowArtifactGcTask.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...WorkflowArtifactGcTask.GVK,
      ...toJson_WorkflowArtifactGcTaskProps(resolved),
    };
  }
}

/**
 * @schema WorkflowArtifactGCTask
 */
export interface WorkflowArtifactGcTaskProps {
  /**
   * @schema WorkflowArtifactGCTask#metadata
   */
  readonly metadata: ApiObjectMetadata;

  /**
   * @schema WorkflowArtifactGCTask#spec
   */
  readonly spec: WorkflowArtifactGcTaskSpec;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskProps(obj: WorkflowArtifactGcTaskProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_WorkflowArtifactGcTaskSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpec
 */
export interface WorkflowArtifactGcTaskSpec {
  /**
   * @schema WorkflowArtifactGcTaskSpec#artifactsByNode
   */
  readonly artifactsByNode?: { [key: string]: WorkflowArtifactGcTaskSpecArtifactsByNode };

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpec(obj: WorkflowArtifactGcTaskSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifactsByNode': ((obj.artifactsByNode) === undefined) ? undefined : (Object.entries(obj.artifactsByNode).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: toJson_WorkflowArtifactGcTaskSpecArtifactsByNode(i[1]) }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNode
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNode {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNode#archiveLocation
   */
  readonly archiveLocation?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNode#artifacts
   */
  readonly artifacts?: { [key: string]: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts };

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNode' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNode(obj: WorkflowArtifactGcTaskSpecArtifactsByNode | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archiveLocation': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation(obj.archiveLocation),
    'artifacts': ((obj.artifacts) === undefined) ? undefined : (Object.entries(obj.artifacts).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts(i[1]) }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation#artifactory
   */
  readonly artifactory?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactory;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation#azure
   */
  readonly azure?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzure;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation#gcs
   */
  readonly gcs?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcs;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation#git
   */
  readonly git?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation#hdfs
   */
  readonly hdfs?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation#http
   */
  readonly http?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttp;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation#oss
   */
  readonly oss?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation#raw
   */
  readonly raw?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationRaw;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation#s3
   */
  readonly s3?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocation | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archiveLogs': obj.archiveLogs,
    'artifactory': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactory(obj.artifactory),
    'azure': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzure(obj.azure),
    'gcs': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcs(obj.gcs),
    'git': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit(obj.git),
    'hdfs': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs(obj.hdfs),
    'http': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttp(obj.http),
    'oss': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss(obj.oss),
    'raw': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationRaw(obj.raw),
    's3': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3(obj.s3),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#archive
   */
  readonly archive?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchive;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#artifactGC
   */
  readonly artifactGc?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGc;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#artifactory
   */
  readonly artifactory?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactory;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#azure
   */
  readonly azure?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzure;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#deleted
   */
  readonly deleted?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#from
   */
  readonly from?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#fromExpression
   */
  readonly fromExpression?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#gcs
   */
  readonly gcs?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcs;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#git
   */
  readonly git?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#hdfs
   */
  readonly hdfs?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#http
   */
  readonly http?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttp;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#mode
   */
  readonly mode?: number;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#name
   */
  readonly name: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#oss
   */
  readonly oss?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#raw
   */
  readonly raw?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsRaw;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#recurseMode
   */
  readonly recurseMode?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#s3
   */
  readonly s3?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts#subPath
   */
  readonly subPath?: string;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifacts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archive': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchive(obj.archive),
    'archiveLogs': obj.archiveLogs,
    'artifactGC': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGc(obj.artifactGc),
    'artifactory': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactory(obj.artifactory),
    'azure': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzure(obj.azure),
    'deleted': obj.deleted,
    'from': obj.from,
    'fromExpression': obj.fromExpression,
    'gcs': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcs(obj.gcs),
    'git': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit(obj.git),
    'globalName': obj.globalName,
    'hdfs': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs(obj.hdfs),
    'http': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttp(obj.http),
    'mode': obj.mode,
    'name': obj.name,
    'optional': obj.optional,
    'oss': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss(obj.oss),
    'path': obj.path,
    'raw': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsRaw(obj.raw),
    'recurseMode': obj.recurseMode,
    's3': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3(obj.s3),
    'subPath': obj.subPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactory
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactory {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryPasswordSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactory#url
   */
  readonly url: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactory(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzure
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzure {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzure#accountKeySecret
   */
  readonly accountKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzureAccountKeySecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzure#blob
   */
  readonly blob: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzure#container
   */
  readonly container: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzure(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcs
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcs {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcs#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcs(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit#branch
   */
  readonly branch?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit#depth
   */
  readonly depth?: number;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitPasswordSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit#repo
   */
  readonly repo: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit#revision
   */
  readonly revision?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitSshPrivateKeySecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitUsernameSecret;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbCCacheSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbConfigConfigMap;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbKeytabSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttp
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttp {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttp#auth
   */
  readonly auth?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuth;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttp#headers
   */
  readonly headers?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpHeaders[];

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttp(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss#accessKeySecret
   */
  readonly accessKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssAccessKeySecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss#lifecycleRule
   */
  readonly lifecycleRule?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssLifecycleRule;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss#secretKeySecret
   */
  readonly secretKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssSecretKeySecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationRaw
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationRaw {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationRaw(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3 {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3#accessKeySecret
   */
  readonly accessKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3AccessKeySecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3#caSecret
   */
  readonly caSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CaSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CreateBucketIfNotPresent;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3#encryptionOptions
   */
  readonly encryptionOptions?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptions;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3#key
   */
  readonly key?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3#region
   */
  readonly region?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3#secretKeySecret
   */
  readonly secretKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3SecretKeySecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchive
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchive {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchive#tar
   */
  readonly tar?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchiveTar;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchive#zip
   */
  readonly zip?: any;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchive' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchive(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchive | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'none': obj.none,
    'tar': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchiveTar(obj.tar),
    'zip': obj.zip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGc
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGc {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGc#podMetadata
   */
  readonly podMetadata?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGcPodMetadata;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGc#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGc#strategy
   */
  readonly strategy?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGcStrategy;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGc(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podMetadata': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGcPodMetadata(obj.podMetadata),
    'serviceAccountName': obj.serviceAccountName,
    'strategy': obj.strategy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactory
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactory {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryPasswordSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryUsernameSecret;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactory' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactory(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactory | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryPasswordSecret(obj.passwordSecret),
    'url': obj.url,
    'usernameSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzure
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzure {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzure#accountKeySecret
   */
  readonly accountKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzureAccountKeySecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzure#blob
   */
  readonly blob: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzure#container
   */
  readonly container: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzure#endpoint
   */
  readonly endpoint: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzure#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzure' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzure(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzure | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accountKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzureAccountKeySecret(obj.accountKeySecret),
    'blob': obj.blob,
    'container': obj.container,
    'endpoint': obj.endpoint,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcs
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcs {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcs#bucket
   */
  readonly bucket?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcs#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcsServiceAccountKeySecret;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcs(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'key': obj.key,
    'serviceAccountKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcsServiceAccountKeySecret(obj.serviceAccountKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit#branch
   */
  readonly branch?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit#disableSubmodules
   */
  readonly disableSubmodules?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitPasswordSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit#singleBranch
   */
  readonly singleBranch?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitSshPrivateKeySecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitUsernameSecret;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'branch': obj.branch,
    'depth': obj.depth,
    'disableSubmodules': obj.disableSubmodules,
    'fetch': obj.fetch?.map(y => y),
    'insecureIgnoreHostKey': obj.insecureIgnoreHostKey,
    'passwordSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitPasswordSecret(obj.passwordSecret),
    'repo': obj.repo,
    'revision': obj.revision,
    'singleBranch': obj.singleBranch,
    'sshPrivateKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitSshPrivateKeySecret(obj.sshPrivateKeySecret),
    'usernameSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs#addresses
   */
  readonly addresses?: string[];

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbCCacheSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbConfigConfigMap;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbKeytabSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addresses': obj.addresses?.map(y => y),
    'force': obj.force,
    'hdfsUser': obj.hdfsUser,
    'krbCCacheSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbCCacheSecret(obj.krbCCacheSecret),
    'krbConfigConfigMap': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbConfigConfigMap(obj.krbConfigConfigMap),
    'krbKeytabSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbKeytabSecret(obj.krbKeytabSecret),
    'krbRealm': obj.krbRealm,
    'krbServicePrincipalName': obj.krbServicePrincipalName,
    'krbUsername': obj.krbUsername,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttp
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttp {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttp#auth
   */
  readonly auth?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuth;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttp#headers
   */
  readonly headers?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpHeaders[];

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttp(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auth': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuth(obj.auth),
    'headers': obj.headers?.map(y => toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpHeaders(y)),
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssAccessKeySecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss#bucket
   */
  readonly bucket?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss#lifecycleRule
   */
  readonly lifecycleRule?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssLifecycleRule;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssSecretKeySecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss#securityToken
   */
  readonly securityToken?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOss | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssAccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'createBucketIfNotPresent': obj.createBucketIfNotPresent,
    'endpoint': obj.endpoint,
    'key': obj.key,
    'lifecycleRule': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssLifecycleRule(obj.lifecycleRule),
    'secretKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssSecretKeySecret(obj.secretKeySecret),
    'securityToken': obj.securityToken,
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsRaw
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsRaw {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsRaw' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsRaw(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsRaw | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'data': obj.data,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3 {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3AccessKeySecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3#bucket
   */
  readonly bucket?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3#caSecret
   */
  readonly caSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CaSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3#createBucketIfNotPresent
   */
  readonly createBucketIfNotPresent?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CreateBucketIfNotPresent;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3#encryptionOptions
   */
  readonly encryptionOptions?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptions;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3#endpoint
   */
  readonly endpoint?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3#key
   */
  readonly key?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3#region
   */
  readonly region?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3#roleARN
   */
  readonly roleArn?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3SecretKeySecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3#useSDKCreds
   */
  readonly useSdkCreds?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3AccessKeySecret(obj.accessKeySecret),
    'bucket': obj.bucket,
    'caSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CaSecret(obj.caSecret),
    'createBucketIfNotPresent': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CreateBucketIfNotPresent(obj.createBucketIfNotPresent),
    'encryptionOptions': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptions(obj.encryptionOptions),
    'endpoint': obj.endpoint,
    'insecure': obj.insecure,
    'key': obj.key,
    'region': obj.region,
    'roleARN': obj.roleArn,
    'secretKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3SecretKeySecret(obj.secretKeySecret),
    'useSDKCreds': obj.useSdkCreds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryPasswordSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryPasswordSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryPasswordSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryUsernameSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryUsernameSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryUsernameSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzureAccountKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzureAccountKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzureAccountKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcsServiceAccountKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcsServiceAccountKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcsServiceAccountKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitPasswordSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitPasswordSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitPasswordSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitSshPrivateKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitSshPrivateKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitSshPrivateKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitUsernameSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitUsernameSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitUsernameSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbCCacheSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbCCacheSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbCCacheSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbConfigConfigMap
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbConfigConfigMap {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbConfigConfigMap(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbKeytabSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbKeytabSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbKeytabSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuth
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuth {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuth#basicAuth
   */
  readonly basicAuth?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuth;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuth#clientCert
   */
  readonly clientCert?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCert;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuth#oauth2
   */
  readonly oauth2?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuth(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpHeaders
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpHeaders {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpHeaders(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssAccessKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssAccessKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssAccessKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssLifecycleRule
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssLifecycleRule {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssLifecycleRule(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssSecretKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssSecretKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssSecretKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3AccessKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3AccessKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3AccessKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CaSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CaSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CaSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CreateBucketIfNotPresent
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CreateBucketIfNotPresent {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CreateBucketIfNotPresent(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptions
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptions {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptions(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3SecretKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3SecretKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3SecretKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchiveTar
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchiveTar {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchiveTar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchiveTar(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArchiveTar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'compressionLevel': obj.compressionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGcPodMetadata
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGcPodMetadata {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGcPodMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGcPodMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGcPodMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGcPodMetadata(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGcPodMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGcStrategy
 */
export enum WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactGcStrategy {
  /** OnWorkflowCompletion */
  ON_WORKFLOW_COMPLETION = "OnWorkflowCompletion",
  /** OnWorkflowDeletion */
  ON_WORKFLOW_DELETION = "OnWorkflowDeletion",
  /** Never */
  NEVER = "Never",
}

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryPasswordSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryPasswordSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryPasswordSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryUsernameSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryUsernameSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryUsernameSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsArtifactoryUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzureAccountKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzureAccountKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzureAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzureAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzureAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzureAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzureAccountKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsAzureAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcsServiceAccountKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcsServiceAccountKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcsServiceAccountKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcsServiceAccountKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGcsServiceAccountKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitPasswordSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitPasswordSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitPasswordSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitSshPrivateKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitSshPrivateKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitSshPrivateKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitSshPrivateKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitSshPrivateKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitUsernameSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitUsernameSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitUsernameSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsGitUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbCCacheSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbCCacheSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbCCacheSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbCCacheSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbCCacheSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbConfigConfigMap
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbConfigConfigMap {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbConfigConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbConfigConfigMap(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbConfigConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbKeytabSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbKeytabSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbKeytabSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbKeytabSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHdfsKrbKeytabSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuth
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuth {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuth#basicAuth
   */
  readonly basicAuth?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuth;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuth#clientCert
   */
  readonly clientCert?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCert;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuth#oauth2
   */
  readonly oauth2?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuth(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAuth': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuth(obj.basicAuth),
    'clientCert': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCert(obj.clientCert),
    'oauth2': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2(obj.oauth2),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpHeaders
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpHeaders {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpHeaders(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssAccessKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssAccessKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssAccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssAccessKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssAccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssLifecycleRule
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssLifecycleRule {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssLifecycleRule#markDeletionAfterDays
   */
  readonly markDeletionAfterDays?: number;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssLifecycleRule#markInfrequentAccessAfterDays
   */
  readonly markInfrequentAccessAfterDays?: number;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssLifecycleRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssLifecycleRule(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssLifecycleRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'markDeletionAfterDays': obj.markDeletionAfterDays,
    'markInfrequentAccessAfterDays': obj.markInfrequentAccessAfterDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssSecretKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssSecretKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssSecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssSecretKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsOssSecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3AccessKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3AccessKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3AccessKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3AccessKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3AccessKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CaSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CaSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CaSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CaSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CaSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CaSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CaSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CaSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CreateBucketIfNotPresent
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CreateBucketIfNotPresent {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CreateBucketIfNotPresent#objectLocking
   */
  readonly objectLocking?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CreateBucketIfNotPresent' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CreateBucketIfNotPresent(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3CreateBucketIfNotPresent | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'objectLocking': obj.objectLocking,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptions
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptions {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptions#enableEncryption
   */
  readonly enableEncryption?: boolean;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptions#kmsEncryptionContext
   */
  readonly kmsEncryptionContext?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptions#kmsKeyId
   */
  readonly kmsKeyId?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptions#serverSideCustomerKeySecret
   */
  readonly serverSideCustomerKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptionsServerSideCustomerKeySecret;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptions(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableEncryption': obj.enableEncryption,
    'kmsEncryptionContext': obj.kmsEncryptionContext,
    'kmsKeyId': obj.kmsKeyId,
    'serverSideCustomerKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj.serverSideCustomerKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3SecretKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3SecretKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3SecretKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3SecretKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3SecretKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuth
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuth {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuth(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCert
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCert {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientCertSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCert(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2 {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientIdSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2EndpointParams[];

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuth
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuth {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuth#passwordSecret
   */
  readonly passwordSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthPasswordSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuth#usernameSecret
   */
  readonly usernameSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthUsernameSecret;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuth' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuth(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuth | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'passwordSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthPasswordSecret(obj.passwordSecret),
    'usernameSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthUsernameSecret(obj.usernameSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCert
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCert {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCert#clientCertSecret
   */
  readonly clientCertSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientCertSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCert#clientKeySecret
   */
  readonly clientKeySecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientKeySecret;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCert' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCert(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCert | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientCertSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientCertSecret(obj.clientCertSecret),
    'clientKeySecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientKeySecret(obj.clientKeySecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2 {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2#clientIDSecret
   */
  readonly clientIdSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientIdSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2#clientSecretSecret
   */
  readonly clientSecretSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientSecretSecret;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2#endpointParams
   */
  readonly endpointParams?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2EndpointParams[];

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2#scopes
   */
  readonly scopes?: string[];

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2#tokenURLSecret
   */
  readonly tokenUrlSecret?: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2TokenUrlSecret;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientIDSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientIdSecret(obj.clientIdSecret),
    'clientSecretSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientSecretSecret(obj.clientSecretSecret),
    'endpointParams': obj.endpointParams?.map(y => toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2EndpointParams(y)),
    'scopes': obj.scopes?.map(y => y),
    'tokenURLSecret': toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2TokenUrlSecret(obj.tokenUrlSecret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptionsServerSideCustomerKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptionsServerSideCustomerKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptionsServerSideCustomerKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptionsServerSideCustomerKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptionsServerSideCustomerKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsS3EncryptionOptionsServerSideCustomerKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthPasswordSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthPasswordSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthUsernameSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthUsernameSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientCertSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientCertSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientCertSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientIdSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientIdSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientIdSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientSecretSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientSecretSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2EndpointParams
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2EndpointParams {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2EndpointParams(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2TokenUrlSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2TokenUrlSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArchiveLocationHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthPasswordSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthPasswordSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthPasswordSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthPasswordSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthPasswordSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthPasswordSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthPasswordSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthUsernameSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthUsernameSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthUsernameSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthUsernameSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthUsernameSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthUsernameSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthBasicAuthUsernameSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientCertSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientCertSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientCertSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientCertSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientCertSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientCertSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientKeySecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientKeySecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientKeySecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientKeySecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientKeySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientKeySecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthClientCertClientKeySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientIdSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientIdSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientIdSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientIdSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientIdSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientIdSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientIdSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientIdSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientSecretSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientSecretSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientSecretSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientSecretSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientSecretSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientSecretSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientSecretSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2ClientSecretSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2EndpointParams
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2EndpointParams {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2EndpointParams#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2EndpointParams#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2EndpointParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2EndpointParams(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2EndpointParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2TokenUrlSecret
 */
export interface WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2TokenUrlSecret {
  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2TokenUrlSecret#key
   */
  readonly key: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2TokenUrlSecret#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2TokenUrlSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2TokenUrlSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2TokenUrlSecret(obj: WorkflowArtifactGcTaskSpecArtifactsByNodeArtifactsHttpAuthOauth2TokenUrlSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */
